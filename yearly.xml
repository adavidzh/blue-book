<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    
    <title>The Blue Book</title>
    <description>My personal digital garden</description>
    <link>https://lyz-code.github.io/blue-book</link>
    <atom:link href="https://lyz-code.github.io/blue-book/yearly.xml" rel="self" type="application/rss+xml"/>

    
    <managingEditor>Lyz</managingEditor>

    
    <pubDate>2022-08-31 08:37:51+00:00</pubDate>
    <ttl>525600</ttl>

    
    <generator>mkdocs-newsletter - v1.0.1</generator>

    
    
    <image><url>https://lyz-code.github.io/blue-book/img/logo.bmp</url><title>The Blue Book</title>
      <link>https://lyz-code.github.io/blue-book</link>
    </image>
    

    
    
    <item><title>2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2021.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;introduction&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Simplify the landing page text.&lt;/li&gt; &lt;li&gt;Reorganization: Merge the Meta article into the index.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#mkdocs-newsletter&#34;&gt;Add mkdocs-newsletter as a dormant plant.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;MkDocs plugin to show the changes of documentation repositories in a user friendly format, at the same time that it&#39;s easy for the authors to maintain.&lt;/p&gt; &lt;p&gt;It creates daily, weekly, monthly and yearly newsletter articles with the changes of each period. Those pages, stored under the &lt;code&gt;Newsletters&lt;/code&gt; section, are filled with the changes extracted from the commit messages of the git history. The changes are grouped by categories, subcategories and then by file using the order of the site&#39;s navigation structure. RSS feeds are also created for each newsletter type, so it&#39;s easy for people to keep updated with the evolution of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Update and reorganize projects.&lt;/p&gt; &lt;p&gt;Following the &lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;digital garden&lt;/a&gt; metaphor&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#seeds&#34;&gt;Merge the wish_list article into the projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Add seed to follow the updates of software.&lt;/li&gt; &lt;li&gt;New: Add seed to automatically update the dockers of maintained services.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain the updates on the repository-orm project.&lt;/p&gt; &lt;p&gt;In the latest version &lt;code&gt;0.2.0&lt;/code&gt;, we added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for the &lt;a href=&#34;https://lyz-code.github.io/repository-orm/tinydb_repository/&#34;&gt;TinyDB repository&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Support for regular expressions in the &lt;code&gt;search&lt;/code&gt; method.&lt;/li&gt; &lt;li&gt;Easier repository loading with &lt;code&gt;load_repository&lt;/code&gt; function.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add a link to the meilisearch &lt;a href=&#34;https://blog.meilisearch.com/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Create the quantified self project.&lt;/p&gt; &lt;p&gt;With links to the two starting points &lt;a href=&#34;https://beepb00p.xyz/hpi.html&#34;&gt;HPI&lt;/a&gt; and &lt;a href=&#34;https://github.com/bionic-dev/bionic&#34;&gt;bionic&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automate-email-management&#34;&gt;Sketch how to automate repetitive tasks prompted by email events.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Most of the emails I receive require repetitive actions that can be automated, I&#39;ve stumbled upon &lt;a href=&#34;https://notmuchmail.org/&#34;&gt;notmuchmail&lt;/a&gt;, which looks very promising. A friend suggested to use &lt;a href=&#34;https://afew.readthedocs.io/en/latest/&#34;&gt;afew&lt;/a&gt; for tagging, and I&#39;d probably use &lt;a href=&#34;https://github.com/pazz/alot&#34;&gt;alot&lt;/a&gt; to interact with the system (and finally be able to use email from the cli).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#quantified-self&#34;&gt;Add interesting interface.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the interface &lt;a href=&#34;https://github.com/adri/memex&#34;&gt;adri&#39;s memex&lt;/a&gt; looks awesome! It&#39;s inspired in the Andrew Louis &lt;a href=&#34;https://www.youtube.com/watch?v=DFWxvQn4cf8&amp;amp;t=1616s&#34;&gt;talk Building a Memex&lt;/a&gt; whose &lt;a href=&#34;https://hyfen.net/memex/&#34;&gt;blog posts&lt;/a&gt; seems to be a gold mine.&lt;/p&gt; &lt;p&gt;Also look at &lt;a href=&#34;https://github.com/hpi/hpi&#34;&gt;hpi&#39;s compilation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-way-of-launching-applications-with-i3wm&#34;&gt;Sketch how to improve the launching of applications with i3wm.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the past I tried installing &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;rofi&lt;/a&gt; without success, I should try again. If the default features are not enough, check &lt;a href=&#34;https://github.com/adi1090x/rofi&#34;&gt;adi1090x&#39;s custom resources&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#repository-orm&#34;&gt;Show the changes of repository-orm 0.3.1.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;+* Add &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; methods to the repositories. +* Make entity &lt;code&gt;id_&lt;/code&gt; definition optional. +* add &lt;code&gt;_model_name&lt;/code&gt; attribute to entities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#quantified-self&#34;&gt;Add woop awesome quantified self resources to the research list.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#migrate-software-bug-tracker-to-a-vendor-free-one&#34;&gt;Add project to migrate software bug tracker to a vendor free one like &lt;code&gt;git-bug&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-notification-management-in-linux&#34;&gt;Improve the notification management in Linux.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to be able to group and silence the notifications under a custom logic. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If I want to focus on a task, only show the most important ones.&lt;/li&gt; &lt;li&gt;Only show alerts once every X minutes. Or define that I want to receive them the first 10 minutes of every hour.&lt;/li&gt; &lt;li&gt;If I&#39;m not working, silence all work alerts.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-hard-drive-monitor-system&#34;&gt;Improve the hard drive monitor system.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to use something like &lt;a href=&#34;https://github.com/AnalogJ/scrutiny&#34;&gt;scrutiny&lt;/a&gt; (there&#39;s a &lt;a href=&#34;https://docs.linuxserver.io/images/docker-scrutiny&#34;&gt;linuxserver image&lt;/a&gt;) to collect and display the information. For alerts, use one of their &lt;a href=&#34;https://github.com/AnalogJ/scrutiny#notifications&#34;&gt;supported providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#aggregate-all-notifications&#34;&gt;Aggregate all notifications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Instead of reading the email, github, gitlab, discourse, reddit notifications, aggregate all in one place and show them to the user in a nice command line interface.&lt;/p&gt; &lt;p&gt;For the aggregator server, my first choice would be &lt;a href=&#34;https://gotify.net/&#34;&gt;gotify&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#faker-optional&#34;&gt;Add faker-optional to the dormant plant projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#other&#34;&gt;Add seedling project to create factoryboy factories from pydantic models automatically.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#inbox-management&#34;&gt;Explain the idea of how to improve the record of ideas, tasks,.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: Add git-bug as an interesting distributed issue tracker.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-reliability-of-the-open-science-collections&#34;&gt;Add the Improve the reliability of the Open Science collections project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The current &lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;free knowledge efforts&lt;/a&gt;: are based on the health of a collection of torrents. This project aims to create a command line tool or service that makes it easier to automate the seeding of ill torrents.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#monitor-and-notify-on-disk-prices&#34;&gt;Add the Monitor and notify on disk prices project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://diskprices.com/&#34;&gt;Diskprices.com&lt;/a&gt; sorts the prices of the disks on the different amazon sites based on many filters. It will be interesting to have a service that monitors the data on this site and alerts the user once there is a deal that matches its criteria.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automating-computer-file-management&#34;&gt;Move the automation of computer file management project to the projects page.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Reorganization: Move the dying projects below the seeds as they are less important.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#self-hosted-map&#34;&gt;Introduce seedling self-hosted map project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I love maps, as well as traveling and hiking. This project aims to create a web interface that let&#39;s me interact with the data gathered throughout my life. I&#39;d like to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Browse the waypoints and routes that I&#39;ve done.&lt;/li&gt; &lt;li&gt;Create routes and export the gpx.&lt;/li&gt; &lt;li&gt;Be able to search through the data&lt;/li&gt; &lt;li&gt;Plan trips&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#switch-to-a-better-browser&#34;&gt;Introduce the seed project to.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#life&#34;&gt;Add the Life seedling project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Life is a real time sandbox role game where you play as yourself surviving in today&#39;s world.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#bruty&#34;&gt;Add bruty to the dormant plant projects.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lyz-code/bruty&#34;&gt;bruty&lt;/a&gt; is a Python program to bruteforce dynamic web applications with Selenium.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add rsarai hq to interesting sources for lifelogging.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#pynbox&#34;&gt;Introduce pynbox the inbox management tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/pynbox&#34;&gt;Pynbox&lt;/a&gt; is a tool to improve the management of ideas, tasks, references, suggestions when I&#39;m not in front of the computer. Right now I&#39;ve got Markor for Android to register these quicknotes, but the reality is that I don&#39;t act upon them, so it&#39;s just a log of tasks that never get done, and ideas, references and suggestions that aren&#39;t registered in my knowledge or media management systems.&lt;/p&gt; &lt;p&gt;On the computer there are also cases of tasks that are not worth registering in the task management system, or ideas that I get at a moment but don&#39;t have time to process at the moment.&lt;/p&gt; &lt;p&gt;The idea then is to automatically sync the Android quicknote with syncthing, and have a special format for the file that allows &lt;a href=&#34;https://lyz-code.github.io/pynbox&#34;&gt;&lt;code&gt;pynbox&lt;/code&gt;&lt;/a&gt; to extract the elements from that file to the &#34;inbox system&#34;. For example: + &lt;/p&gt; &lt;p&gt;Gets introduced in the &#34;inbox system&#34; as a task, a TV suggestion and an idea.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce nyxt as a solution for a better browser.&lt;/p&gt; &lt;p&gt;I&#39;ve just stumbled upon &lt;a href=&#34;https://nyxt.atlas.engineer/&#34;&gt;nyxt&lt;/a&gt; (&lt;a href=&#34;https://github.com/atlas-engineer/nyxt&#34;&gt;code&lt;/a&gt;), and it looks superb.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#shared-accounting&#34;&gt;Introduce the shared accounting seed project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I use &lt;a href=&#34;https://lyz-code.github.io/blue-book/beancount/&#34;&gt;beancount&lt;/a&gt; for my personal accounting, I&#39;d like to have a system that integrates more less easily with beancount and let&#39;s do a shared accounting with other people, for example in trips. I&#39;ve used &lt;a href=&#34;https://settleup.io/&#34;&gt;settle up&lt;/a&gt; in the past but it requires access to their servers, and an account linked to google, facebook or one you register in their servers.&lt;/p&gt; &lt;p&gt;I&#39;ve looked at &lt;a href=&#34;https://github.com/nymanjens/facto&#34;&gt;facto&lt;/a&gt; but it uses a logic that doesn&#39;t apply to my case, it does a heavy use on a common account, instead +of minimizing the transactions between the people. I also tried &lt;a href=&#34;https://github.com/bertvandepoel/tabby#installation&#34;&gt;tabby&lt;/a&gt;, even though they still &lt;a href=&#34;https://github.com/bertvandepoel/tabby/issues/13&#34;&gt;don&#39;t support Docker&lt;/a&gt;, but it doesn&#39;t suit my case either :(.&lt;/p&gt; &lt;p&gt;Until a new solution shows up, I&#39;ll go with &lt;a href=&#34;https://github.com/koelleChristian/trickytripper&#34;&gt;Tricky Tripper&lt;/a&gt; available in F-Droid, and manage the expenses myself and periodically send the html reports to the rest of the group.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add quickwit as an interesting database solution for personal knowledge search engine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automate-email-management&#34;&gt;Promote the automation of email management project to seedling.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#pomodoro-command-line&#34;&gt;Introduce the pomodoro command line seed project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Command line to help with the &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#pomodoro&#34;&gt;pomodoro workflow&lt;/a&gt;, besides the basic stuff it will interact with the task manager, &lt;a href=&#34;https://lyz-code.github.io/blue-book/activitywatch/&#34;&gt;activitywatch&lt;/a&gt; and the notifications system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#create-an-ordered-list-of-digital-gardens&#34;&gt;Introduce the ordered list of digital gardens project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://github.com/best-of-lists/best-of&#34;&gt;best-of-lists&lt;/a&gt; to create an awesome list of digital gardens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Clean up deprecated projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#self-host-a-routing-web-application&#34;&gt;Add seed to self host a routing web application.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Host and play around with &lt;a href=&#34;https://github.com/abrensch/brouter&#34;&gt;brouter&lt;/a&gt; and &lt;a href=&#34;https://github.com/nrenner/brouter-web&#34;&gt;brouter-web&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;activism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anonymous_feedback/&#34;&gt;Activism&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the anonymous feedback tool to improve diversity, equity and inclusion in an organization.&lt;/p&gt; &lt;p&gt;Anonymous Feedback is a communication tool where people share feedback to teammates or other organizational members while protecting their identities.&lt;/p&gt; &lt;p&gt;Until the safe space is built where direct feedback is viable, anonymous feedback gives these employees a mechanism to raise their concerns, practice their feedback-giving skills, test the waters, and understand how people perceive their constructive (and sometimes critical) opinions, thus building the needed trust.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Define Diversity, Equity and Inclusion.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Diversity&lt;/em&gt; is the representation and acknowledgement of the multitudes of identities, experiences, and ways of moving through the world. This includes—but is not limited to—ability, age, citizenship status, criminal record and/or incarceration, educational attainment, ethnicity, gender, geographical location, language, nationality, political affiliation, religion, race, sexuality, socioeconomic status, and veteran status. Further, we recognize that each individual&#39;s experience is informed by intersections across multiple identities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Equity&lt;/em&gt; seeks to ensure respect and equal opportunity for all, using all resources and tools to elevate the voices of under-represented and/or disadvantaged groups.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Inclusion&lt;/em&gt; is fostering an environment in which people of all identities are welcome, valued, and supported. An inclusive organization solicits, listens to, learns from, and acts on the contributions of all its stakeholders.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Anti-transphobia.&lt;/p&gt; &lt;p&gt;Anti-transphobia being reductionist is the opposition to the collection of ideas and phenomena that encompass a range of negative attitudes, feelings or actions towards transgender people or transness in general. Transphobia can include fear, aversion, hatred, violence, anger, or discomfort felt or expressed towards people who do not conform to social gender expectations. It is often expressed alongside homophobic views and hence is often considered an aspect of homophobia.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antitransphobia/#terf&#34;&gt;Introduce arguments against terf ideology.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/TERF&#34;&gt;TERF&lt;/a&gt; is an acronym for &lt;em&gt;trans-exclusionary radical feminist&lt;/em&gt;. The term originally applied to the minority of feminists that expressed transphobic sentiments such as the rejection of the assertion that trans women are women, the exclusion of trans women from women&#39;s spaces, and opposition to transgender rights legislation. The meaning has since expanded to refer more broadly to people with trans-exclusionary views who may have no involvement with radical feminism.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;antifascism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascism/&#34;&gt;Antifascism&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce antifascism.&lt;/p&gt; &lt;p&gt;Antifascism is a method of politics, a locus of individual and group self-indentification, it&#39;s a transnational movement that adapted preexisting socialist, anarchist, and communist currents to a sudden need to react to the fascist menace (&lt;a href=&#34;#references&#34;&gt;Mark p. 11&lt;/a&gt;). It&#39;s based on the idea that &lt;a href=&#34;#how-to-identify-fascism&#34;&gt;any oppression form&lt;/a&gt; can&#39;t be allowed, and should be actively fought with whatever means are necessary.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;antifascist-actions&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/&#34;&gt;Antifascist Actions&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/#a-fake-company-and-five-million-recycled-flyers&#34;&gt;A fake company and five million recycled flyers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A group of artists belonging to the &lt;a href=&#34;https://politicalbeauty.com/&#34;&gt;Center for political beauty&lt;/a&gt; created a fake company &lt;a href=&#34;https://www.flyerservice-hahn.de/&#34;&gt;Flyerservice Hahn&lt;/a&gt; and convinced more than 80 regional sections of the far right party AfD to hire them to deliver their electoral propaganda.&lt;/p&gt; &lt;p&gt;They gathered five million flyers, with a total weight of 72 tons. They justify that they wouldn&#39;t be able to lie to the people, so they did nothing in the broader sense of the word. They declared that they are the &lt;a href=&#34;https://www.youtube.com/watch?v=qcBVq-PtrpY&#34;&gt;&#34;world wide leader in the non-delivery of nazi propaganda&#34;&lt;/a&gt;. At the start of the electoral campaign, they went to the AfD stands, and they let their members to give them flyers the throw them to the closest bin. &#34;It&#39;s something that any citizen can freely do, we have only industrialized the process&#34;.&lt;/p&gt; &lt;p&gt;They&#39;ve done a &lt;a href=&#34;https://afd-muell.de/&#34;&gt;crowdfunding&lt;/a&gt; to fund the legal process that may result.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;feminism&#34;&gt;Feminism&lt;/h3&gt; &lt;h4 id=&#34;privileges&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/feminism/privileges/&#34;&gt;Privileges&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Feminist analysis of privileges and rights.&lt;/p&gt; &lt;p&gt;Privileges are a group of special structural benefits, social advantages, that a group holds over another. So they are elements that should be removed from our lives.&lt;/p&gt; &lt;p&gt;Some of the topics included are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;What&#39;s the difference between privilege and right&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/feminism/privileges/#what-can-we-do-to-fight-the-privileges&#34;&gt;What can we do to fight the privileges?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;free-knowledge&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;Free Knowledge&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce how to contribute to the free knowledge initiative.&lt;/p&gt; &lt;p&gt;One of the early principles of the internet has been to make knowledge free to everyone. &lt;a href=&#34;https://en.wikipedia.org/wiki/Alexandra_Elbakyan&#34;&gt;Alexandra Elbakyan&lt;/a&gt; of &lt;a href=&#34;https://sci-hub.do/&#34;&gt;Sci-Hub&lt;/a&gt;, bookwarrior of &lt;a href=&#34;https://libgen.fun/&#34;&gt;Library Genesis&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Aaron_Swartz&#34;&gt;Aaron Swartz&lt;/a&gt;, and countless unnamed others have fought to free science from the grips of for-profit publishers. Today, they do it working in hiding, alone, without acknowledgment, in fear of imprisonment, and even now wiretapped by the FBI. They sacrifice everything for one vision: Open Science.&lt;/p&gt; &lt;p&gt;If you want to know how to contribute, check the &lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;article&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_management/&#34;&gt;Life Management&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Reorganization: Split the life automation article into life management and process automation.&lt;/p&gt; &lt;p&gt;I understand life management as the act of analyzing yourself and your interactions with the world to define processes and automations that shape the way to efficiently achieve your goals.&lt;/p&gt; &lt;p&gt;I understand process automation as the act of analyzing yourself and your interactions with the world to find the way to reduce the time or willpower spent on your life processes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;time-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/&#34;&gt;Time Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the time management concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Time_management&#34;&gt;Time management&lt;/a&gt; is the process of planning and exercising conscious control of time spent on specific activities, especially to increase effectiveness, efficiency, and productivity. It involves a juggling act of various demands upon a person relating to work, social life, family, hobbies, personal interests, and commitments with the finiteness of time. Using time effectively gives the person &#34;choice&#34; on spending or managing activities at their own time and expediency.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Start analyzing the ways to reduce the time spent doing unproductive tasks.&lt;/p&gt; &lt;p&gt;By &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#minimize-the-context-switches&#34;&gt;minimizing the context switches&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#interruption-management&#34;&gt;managing the interruptions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#tool-management&#34;&gt;Explain how to improve your efficiency by better using your everyday tools.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add two more ways to avoid loosing time in unproductive tasks.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#avoid-lost-time-doing-nothing&#34;&gt;Avoid lost time doing nothing&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#fix-your-environment&#34;&gt;Fix your environment&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#meetings&#34;&gt;Explain how to manage meetings efficiently.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#improve-your-state&#34;&gt;Explain how to improve efficiency by taking care of yourself.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#don&#39;t-wait,-switch-task&#34;&gt;Explain how to prevent blocks by efficiently switching mental processes.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;task-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/task_management/&#34;&gt;Task Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the task management concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Task_management&#34;&gt;Task management&lt;/a&gt; is the process of managing a task through its life cycle. It involves planning, testing, tracking, and reporting. Task management can help either individual achieve goals, or groups of individuals collaborate and share knowledge for the accomplishment of collective goals.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Introduce the main task management tools.&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_management/#inbox&#34;&gt;inbox&lt;/a&gt; does not refer only to your e-mail inbox. It is a broader concept that includes all the elements you have collected in different ways: tasks you have to do, ideas you have thought of, notes, bills, business cards, etc…&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_management/#task-manager&#34;&gt;task manager&lt;/a&gt; tool to make your interaction with the tasks easier. You can start with the &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_management/#the-simplest-task-manager&#34;&gt;simplest task manager&lt;/a&gt;, a markdown file in your computer with a list of tasks to do. Annotate only the actionable tasks that you need to do today, otherwise it can quickly grow to be unmanageable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add the benefits when you do task management well, and the side effects if you do it wrong.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Improvement: Add a small guide on how to introduce yourself into task management.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;task-management-workflows&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/&#34;&gt;Task Management Workflows&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the main task management workflows.&lt;/p&gt; &lt;p&gt;Task management can be done at different levels. All of them help you in different ways to reduce the mental load, each also gives you extra benefits that can&#39;t be gained by the others. Going from lowest to highest abstraction level we have:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pomodoro.&lt;/li&gt; &lt;li&gt;Task plan.&lt;/li&gt; &lt;li&gt;Day plan.&lt;/li&gt; &lt;li&gt;Week plan.&lt;/li&gt; &lt;li&gt;Month plan.&lt;/li&gt; &lt;li&gt;Semester plan.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the commit I&#39;ve detailed the &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#pomodoro&#34;&gt;Pomodoro technique&lt;/a&gt; and the &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#task-plan&#34;&gt;task&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#day-plan&#34;&gt;day&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#week-plan&#34;&gt;week&lt;/a&gt; plans.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/task_workflows/#hype-flow-versus-a-defined-plan&#34;&gt;Explain the difference of surfing the hype flow versus following a defined plan.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;interruption-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/interruption_management/&#34;&gt;Interruption Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the interruption management concept.&lt;/p&gt; &lt;p&gt;Interruption management is the &lt;a href=&#34;https://lyz-code.github.io/blue-book/life_management/&#34;&gt;life management&lt;/a&gt; area that gathers the processes to minimize the time and willpower toll consumed by interruptions.&lt;/p&gt; &lt;p&gt;The article proposes a way to analyze your existent interruptions and define how can you improve your interaction with them. I&#39;ve applied it both to my &lt;a href=&#34;https://lyz-code.github.io/blue-book/work_interruption_analysis/&#34;&gt;work&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/personal_interruption_analysis/&#34;&gt;personal&lt;/a&gt; interruptions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/interruption_management/#workflow&#34;&gt;Explain what to do once you have the interruption analysis.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;work-interruption-analysis&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/work_interruption_analysis/&#34;&gt;Work Interruption Analysis&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add analysis of instant message interruptions.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;personal-interruption-analysis&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/personal_interruption_analysis/&#34;&gt;Personal Interruption Analysis&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add analysis of instant message interruptions.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;money-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/money_management/&#34;&gt;Money Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Move the accounting automation to money management.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;email-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/email_management/&#34;&gt;Email Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how I configure and interact with email efficiently.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;email-automation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/email_automation/&#34;&gt;Email Automation&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how setup an infrastructure to automate.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;music-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/music_management/&#34;&gt;Music Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce how I manage my music library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;musicbrainz&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/musicbrainz/&#34;&gt;MusicBrainz&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to contribute to MusicBrainz.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://musicbrainz.org&#34;&gt;MusicBrainz&lt;/a&gt; is an open music encyclopedia that collects music metadata and makes it available to the public.&lt;/p&gt; &lt;p&gt;MusicBrainz aims to be:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The ultimate source of music information by allowing anyone to contribute and releasing the data under open licenses.&lt;/li&gt; &lt;li&gt;The universal lingua franca for music by providing a reliable and unambiguous form of music identification, enabling both people and machines to have meaningful conversations about music.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Like Wikipedia, MusicBrainz is maintained by a global community of users and we want everyone — including you — to &lt;a href=&#34;https://musicbrainz.org/doc/How_to_Contribute&#34;&gt;participate and contribute&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;book-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/book_management/&#34;&gt;Book Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the book management concept.&lt;/p&gt; &lt;p&gt;Book management is the set of systems and processes to get and categorize books so it&#39;s easy to browse and discover new content. It involves the next actions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Automatically index and download metadata of new books.&lt;/li&gt; &lt;li&gt;Notify the user when a new book is added.&lt;/li&gt; &lt;li&gt;Monitor the books of an author, and get them once they are released.&lt;/li&gt; &lt;li&gt;Send books to the e-reader.&lt;/li&gt; &lt;li&gt;A nice interface to browse the existent library, with the possibility of filtering by author, genre, years, tags or series.&lt;/li&gt; &lt;li&gt;An interface to preview or read the items.&lt;/li&gt; &lt;li&gt;An interface to rate and review library items.&lt;/li&gt; &lt;li&gt;An interface to discover new content based on the ratings and item metadata.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I haven&#39;t yet found a single piece of software that fulfills all these needs, in the article I tell you about &lt;a href=&#34;https://readarr.com/&#34;&gt;Readarr&lt;/a&gt;, &lt;a href=&#34;https://github.com/janeczku/calibre-web&#34;&gt;Calibre-web&lt;/a&gt;, [calibre]((&lt;a href=&#34;https://manual.calibre-ebook.com/&#34;&gt;https://manual.calibre-ebook.com/&lt;/a&gt;), &lt;a href=&#34;https://getpolarized.io/&#34;&gt;Polar bookself&lt;/a&gt;, &lt;a href=&#34;http://www.gcstar.org/&#34;&gt;GCStar&lt;/a&gt;, and how they interact with each other.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add link to the calibre-web kobo integration project.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;map-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/map_management/&#34;&gt;Map Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How I manage maps in my life.&lt;/p&gt; &lt;p&gt;For navigating on the go, I strongly recommend &lt;a href=&#34;https://lyz-code.github.io/blue-book/osmand/&#34;&gt;OSMand+&lt;/a&gt;, for browsing maps in the browser, use &lt;a href=&#34;https://osm.org&#34;&gt;OpenStreetMaps&lt;/a&gt; or &lt;a href=&#34;https://www.cyclosm.org&#34;&gt;CyclOSM&lt;/a&gt; if you want to move by bike.&lt;/p&gt; &lt;p&gt;To plan routes, you can use &lt;a href=&#34;https://brouter.de/brouter-web&#34;&gt;brouter.de&lt;/a&gt;, it works perfectly for bikes. For hiking is awesome too, it shows you a lot of data needed to plan your tracks (check the settings on the right). If you want to invest a little more time, you can even set your &lt;a href=&#34;https://github.com/poutnikl/Brouter-profiles/wiki/Hiking-profiles&#34;&gt;personalize profiles&lt;/a&gt;, so that the routing algorithm prioritizes the routes to your desires. It&#39;s based on &lt;a href=&#34;https://github.com/abrensch/brouter&#34;&gt;brouter&lt;/a&gt; and both can be &lt;a href=&#34;https://github.com/nrenner/brouter-web&#34;&gt;self-hosted&lt;/a&gt;, although &lt;a href=&#34;https://github.com/abrensch/brouter/issues/359&#34;&gt;brouter does not yet use Docker&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;instant-messages-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/instant_messages_management/&#34;&gt;Instant Messages Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how I configure and interact with chat applications efficiently.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;process-automation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/process_automation/&#34;&gt;Process Automation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add xkcd comics that gather the essence and pitfalls of process automation.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;virtual-assistant&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/virtual_assistant/&#34;&gt;Virtual Assistant&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce project with kalliope.&lt;/li&gt; &lt;li&gt;New: Explain the Speech-To-Text open source solutions.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#the-sleep-cycle&#34;&gt;Explain the sleep cycle.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Humans cycle through two types of sleep in a regular pattern throughout the night with a period of 90 minutes. They were called non-rapid eye movement (NREM) and rapid eye movement (REM).&lt;/p&gt; &lt;p&gt;I answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;What is the period of the REM/NREM cycle?&lt;/li&gt; &lt;li&gt;What happens to your body in REM and NREM phases?&lt;/li&gt; &lt;li&gt;How does the ratio of REM/NREM changes throughout the night? with a possible explanation.&lt;/li&gt; &lt;li&gt;Why sleeping 6 hours can make you loose up to 90% of your REM or NREM phases?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#sleeping-time-and-sense-distortions&#34;&gt;Explain sleeping time and sense distortions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Why time feels longer in our dreams?&lt;/li&gt; &lt;li&gt;How do we loose awareness of the outside world when sleeping?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;teeth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth/&#34;&gt;Teeth&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to take care of your teeth.&lt;/p&gt; &lt;p&gt;A full guide on why should you take care of your teeth, the description on how the basic oral diseases work, why and how to brush your teeth, floss and usage of mouthwash&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Recommend a regular clean instead of a deep clean.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deep-cleaning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth_deep_cleaning/&#34;&gt;Deep cleaning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain what a deep cleaning is and when should you do it.&lt;/p&gt; &lt;p&gt;Analyze the reasons why would you need to do this procedure, how it works, when you need to do it, side effects and scientific evidences of it&#39;s effectiveness.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;fitness-tracker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fitness_band/&#34;&gt;Fitness Tracker&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the fitness band in your life automation.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Activity_tracker&#34;&gt;Fitness tracker&lt;/a&gt; or activity trackers are devices or applications for monitoring and tracking fitness-related metrics such as distance walked or run, calorie consumption, and in some cases heartbeat. It is a type of wearable computer.&lt;/p&gt; &lt;p&gt;Explain also why it&#39;s interesting&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Discovery of wasp-os and Colmi P8.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/daniel-thompson/wasp-os&#34;&gt;wasp-os&lt;/a&gt; is an open source firmware for smart watches that are based on the nRF52 family of microcontrollers. Fully supported by &lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;gadgetbridge&lt;/a&gt;, Wasp-os features full heart rate monitoring and step counting support together with multiple clock faces, a stopwatch, an alarm clock, a countdown timer, a calculator and lots of other games and utilities. All of this, and still with access to the MicroPython REPL for interactive tweaking, development and testing.&lt;/p&gt; &lt;p&gt;One of the supported devices, the &lt;a href=&#34;https://wasp-os.readthedocs.io/en/latest/install.html#colmi-p8&#34;&gt;Colmi P8&lt;/a&gt;, looks really good.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;amazfit-band-5&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/amazfit_band_5/&#34;&gt;Amazfit Band 5&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add insights on sleep detection.&lt;/p&gt; &lt;p&gt;The sleep tracking using Gadgetbridge is not &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Huami-Deep-Sleep-Detection&#34;&gt;good at all&lt;/a&gt;. After two nights, the band has not been able to detect when I woke in the middle of the night, or when I really woke up, as I usually stay in the bed for a time before standing up. I&#39;ll try with the proprietary application soon and compare results.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to upgrade the firmware.&lt;/p&gt; &lt;p&gt;Gadgetbridge people have a &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Amazfit-Band-5-Firmware-Update&#34;&gt;guide on how to upgrade the firmware&lt;/a&gt;, you need to get the firmware from the &lt;a href=&#34;https://geekdoing.com/threads/amazfit-band-5-original-firmwares-resources-fonts.2331/&#34;&gt;geek doing forum&lt;/a&gt; though, so it is interesting to create an account and watch the post.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add insights on sleep tracking.&lt;/p&gt; &lt;p&gt;You can&#39;t use the Withings sleep analyzer without their app (as expected), maybe the &lt;a href=&#34;https://github.com/karlicoss/HPI/blob/master/my/emfit/__init__.py&#34;&gt;Emfit QS&lt;/a&gt; is the way to go.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/&#34;&gt;Coding&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vue.js.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vuejs.org&#34;&gt;Vue.js&lt;/a&gt; is a progressive framework for building user interfaces.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;generic-coding-practices&#34;&gt;Generic Coding Practices&lt;/h3&gt; &lt;h4 id=&#34;program-versioning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/&#34;&gt;Program Versioning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Define how to use versioning in software.&lt;/p&gt; &lt;p&gt;A &lt;strong&gt;long&lt;/strong&gt; article on how to use versioning both as a developer and as a consumer. It includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#deciding-what-version-system-to-use-for-your-programs&#34;&gt;Deciding what version system to use for your programs&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#how-to-evolve-your-code-version&#34;&gt;How to evolve your code version&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#deciding-how-to-manage-the-versions-of-your-dependencies&#34;&gt;Deciding how to manage the versions of your dependencies&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;A huge rant on &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;Upper version pinning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#lower-version-pinning&#34;&gt;When to use lower version pinning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#automatically-upgrade-and-test-your-dependencies&#34;&gt;How to automatically upgrade and test your dependencies&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#monitor-your-dependencies-evolution&#34;&gt;Monitor your dependencies evolution&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;keep-a-changelog&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/&#34;&gt;Keep a Changelog&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Changelog practice.&lt;/p&gt; &lt;p&gt;A changelog is a file which contains a curated, chronologically ordered list of notable changes for each version of a project.&lt;/p&gt; &lt;p&gt;It&#39;s purpose is to make it easier for users and contributors to see precisely what notable changes have been made between each release (or version) of the project.&lt;/p&gt; &lt;p&gt;In the article we added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/changelog/#changelog-guidelines&#34;&gt;Guidelines&lt;/a&gt; on how to build good changelogs&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/changelog/#how-to-reduce-the-effort-required-to-maintain-a-changelog&#34;&gt;How to reduce the effort required to maintain a changelog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Semantic Versioning.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; is a way to define your program&#39;s version based on the type of changes you&#39;ve introduced. It&#39;s defined as a three-number string (separated with a period) in the format of &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Also included in the article is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/#when-to-do-a-major-release&#34;&gt;When to do a major release&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/#semantic-versioning-system-problems&#34;&gt;Semantic versioning system problems&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;calendar-versioning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/documentation/&#34;&gt;Calendar Versioning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Start explaining how to write good documentation for a software project.&lt;/p&gt; &lt;p&gt;It doesn&#39;t matter how good your program is, because if its documentation is not good enough, people will not use it.&lt;/p&gt; &lt;p&gt;People working with software need different kinds of documentation at different times, in different circumstances, so good software documentation needs them all. In this first iteration, I define the five kinds of documentation, and give the ideas to write good introduction and get started sections.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Calendar Versioning.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://calver.org/&#34;&gt;Calendar Versioning&lt;/a&gt; is a versioning convention based on your project&#39;s release calendar, instead of arbitrary numbers.&lt;/p&gt; &lt;p&gt;CalVer suggests version number to be in format of: &lt;code&gt;YEAR.MONTH.sequence&lt;/code&gt;. For example, &lt;code&gt;20.1&lt;/code&gt; indicates a release in 2020 January, while &lt;code&gt;20.5.2&lt;/code&gt; indicates a release that occurred in 2020 May, while the &lt;code&gt;2&lt;/code&gt; indicates this is the third release of the month.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to check if a loop ends completely.&lt;/li&gt; &lt;li&gt;New: Explain how to merge lists and dictionaries.&lt;/li&gt; &lt;li&gt;New: Explain how to create your own exceptions.&lt;/li&gt; &lt;li&gt;New: Add python landing page.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add aiomultiprocess to the list of libraries to test.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/omnilib/aiomultiprocess&#34;&gt;aiomultiprocess&lt;/a&gt;: Presents a simple interface, while running a full AsyncIO event loop on each child process, enabling levels of concurrency never before seen in a Python application. Each child process can execute multiple coroutines at once, limited only by the workload and number of cores available.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#how-to-write-good-documentation&#34;&gt;Add interesting links on how to write good documentation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I would like to refactor &lt;a href=&#34;https://documentation.divio.com/introduction/&#34;&gt;divio&#39;s&lt;/a&gt; and &lt;a href=&#34;https://v3.vuejs.org/guide/contributing/writing-guide.html#principles&#34;&gt;Vue&#39;s&lt;/a&gt; guidelines and apply it to my projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add FastAPI docs as a model to study and follow.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add apprise to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caronc/apprise&#34;&gt;apprise&lt;/a&gt;: Allows you to send a notification to almost all of the most popular notification services available to us today such as: Linux, Telegram, Discord, Slack, Amazon SNS, Gotify, etc. Look at &lt;a href=&#34;https://github.com/caronc/apprise#supported-notifications&#34;&gt;all the supported notifications&lt;/a&gt; &lt;code&gt;(¬º-°)¬&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add kivi and kivimd to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kivy.org/&#34;&gt;kivi&lt;/a&gt; is used to create android/Linux/iOS/Windows applications with python. Use it with &lt;a href=&#34;https://github.com/kivymd/KivyMD&#34;&gt;kivimd&lt;/a&gt; to make it beautiful, check &lt;a href=&#34;https://github.com/HeaTTheatR/Articles&#34;&gt;the examples&lt;/a&gt; and the &lt;a href=&#34;https://kivymd.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add parso library to interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/davidhalter/parso&#34;&gt;parso&lt;/a&gt; is a library to parse Python code.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add textual as interesting library to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual&#34;&gt;textual&lt;/a&gt;: Textual is a TUI (Text User Interface) framework for Python using Rich as a renderer.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add schedule to interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbader/schedule&#34;&gt;schedule&lt;/a&gt; is a Python job scheduling for humans. Run Python functions (or any other callable) periodically using a friendly syntax.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add tryceratops to interesting linters to try.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guilatrova/tryceratops&#34;&gt;tryceratops&lt;/a&gt; is a linter of exceptions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic-field-types&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/&#34;&gt;Pydantic Field Types&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the asyncio library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/asyncio.html&#34;&gt;asyncio&lt;/a&gt; is a library to write concurrent code using the async/await syntax.&lt;/p&gt; &lt;p&gt;asyncio is used as a foundation for multiple Python asynchronous frameworks that provide high-performance network and web-servers, database connection libraries, distributed task queues, etc.&lt;/p&gt; &lt;p&gt;asyncio is often a perfect fit for IO-bound and high-level structured network code.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#limit-concurrency&#34;&gt;Limit concurrency.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://docs.python.org/3/library/asyncio-sync.html#semaphores&#34;&gt;&lt;code&gt;asyncio.Semaphore&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Semaphore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# work with shared resource&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic_types/#using-constrained-strings-in-list-attributes&#34;&gt;Using constrained strings in list attributes.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Field&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pydantic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConstrainedStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;^[0-9a-z_]*$&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pydantic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;regex&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;abc&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;123&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;asdf&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]})&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pipenv&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/requests_mock/&#34;&gt;Pipenv&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to set cookies and headers in responses.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the AWS SDK library and explain how to test it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://boto3.amazonaws.com/v1/documentation/api/latest/index.html&#34;&gt;Boto3&lt;/a&gt; is the AWS SDK for Python to create, configure, and manage AWS services, such as Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3). The SDK provides an object-oriented API as well as low-level access to AWS services.&lt;/p&gt; &lt;p&gt;For &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#testing&#34;&gt;testing&lt;/a&gt;, try to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#moto&#34;&gt;moto&lt;/a&gt;, using the &lt;a href=&#34;https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html&#34;&gt;Botocore&#39;s stubber&lt;/a&gt; as fallback option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to test ec2, route53, s3, and rds resources.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test vpc and auto scaling group resources.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to extract the instance when testing autoscaling groups.&lt;/p&gt; &lt;p&gt;Also track the &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#issues&#34;&gt;issue to add support to launch templates&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-security-groups&#34;&gt;Explain how to test security groups.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-route53&#34;&gt;Add note that pagination is not yet supported when testing route53.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve &lt;a href=&#34;https://github.com/spulec/moto/issues/3879&#34;&gt;opened an issue&lt;/a&gt; to solve it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-iam-users&#34;&gt;Explain how to test IAM users and groups.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Improvement: Monitor motor issue with the &lt;code&gt;cn-north-1&lt;/code&gt; rds and autoscaling endpoints.&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#testing&#34;&gt;Testing full screen applications.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#pass-more-than-one-key&#34;&gt;Pass more than one key.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To map an action to two key presses use &lt;code&gt;kb.add(&#39;g&#39;, &#39;g&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#styles&#34;&gt;Add note on how to debug the styles of the components.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Set the style to &lt;code&gt;bg:#dc322f&lt;/code&gt; and it will be highlighted in red.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#conditional-containers&#34;&gt;How to use Conditional Containers.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prompt_toolkit.layout&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ConditionalContainer&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prompt_toolkit.filters.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_filter&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;show_header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ConditionalContainer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Label&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;This is an optional text&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show_header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the pipenv package manager.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pypa/pipenv&#34;&gt;Pipenv&lt;/a&gt; is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;poetry&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Poetry&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to ignore a linter error and a type error.&lt;/p&gt; &lt;p&gt;With &lt;code&gt;# type: ignore # noqa: W0212&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#allow-any-subclass&#34;&gt;Explain how to define the type hints of functions and methods that use subclasses.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s a complex topic that has taken me many months to get it right :).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#type-hints-of-generators&#34;&gt;Explain how to write type hints for generator functions.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to log in using pass.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pass show dockerhub &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; docker login --username foo --password-stdin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how not to store the credentials in plaintext.&lt;/p&gt; &lt;p&gt;It doesn&#39;t work, don&#39;t go this painful road and assume that docker is broken.&lt;/p&gt; &lt;p&gt;The official steps are horrible, and once you&#39;ve spent two hours debugging them, you &lt;a href=&#34;https://github.com/docker/docker-credential-helpers/issues/154&#34;&gt;won&#39;t be able to push or pull images with your user&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to change the command line help description.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#how-to-keep-containers-updated&#34;&gt;Explain how to use watchtower to keep docker containers updated.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://containrrr.dev/watchtower/&#34;&gt;watchtower&lt;/a&gt; you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to run the watchtower checks immediately.&lt;/p&gt; &lt;p&gt;With the &lt;code&gt;--run-once&lt;/code&gt; flag&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/#invoke-other-commands-from-a-command&#34;&gt;Invoke other commands from a command.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is a pattern that is generally discouraged with Click, but possible nonetheless. For this, you can use the &lt;code&gt;Context.invoke()&lt;/code&gt; or &lt;code&gt;Context.forward()&lt;/code&gt; methods.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#define-a-typevar-with-restrictions&#34;&gt;Define a TypeVar with restrictions.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TypeVar&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TypeVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;AnyStr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#use-a-constrained-typevar-in-the-definition-of-a-class-attributes&#34;&gt;Use a constrained TypeVar in the definition of a class attributes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you try to use a &lt;code&gt;TypeVar&lt;/code&gt; in the definition of a class attribute:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Model a computer file.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# mypy error!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;mypy&lt;/a&gt; will complain with &lt;code&gt;Type variable AnyStr is unbound [valid-type]&lt;/code&gt;, to solve it, you need to make the class inherit from the &lt;code&gt;Generic[AnyStr]&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Model a computer file.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Deeply introduce Poetry, a python package manager.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry&#34;&gt;Poetry&lt;/a&gt; is a command line program that helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#debugging-why-a-package-is-not-updated-to-the-latest-version&#34;&gt;Debugging why a package is not updated to the latest version.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#checking-what-package-is-using-a-dependency&#34;&gt;Checking what package is using a dependency.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#configuration&#34;&gt;Try to use &lt;code&gt;pass&lt;/code&gt; as a keyring backend to store the PYPI token.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Warn against upper version pinning.&lt;/p&gt; &lt;p&gt;The main problem is that &lt;code&gt;poetry add&lt;/code&gt; does &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;upper pinning of dependencies&lt;/a&gt; by default, which is a &lt;strong&gt;really bad idea&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_logging/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to log python program exceptions better than to a file.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;logging&lt;/code&gt; to write write exceptions and breadcrumbs to a file might not be the best solution because unless you look at it directly most errors will pass unnoticed.&lt;/p&gt; &lt;p&gt;To actively monitor and react to code exceptions use an application monitoring platform like &lt;a href=&#34;https://sentry.io/welcome/&#34;&gt;sentry&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the article I explain what are the advantages of using this solution and do a comparison between Sentry and &lt;a href=&#34;https://glitchtip.com&#34;&gt;GlitchTip&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/dash/#testing&#34;&gt;Testing Dash applications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;dash.testing&lt;/code&gt; provides some off-the-rack pytest fixtures and a minimal set of testing APIs with our internal crafted best practices at the integration level. The commit includes a simple example and some guides on how to test Dash application.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#testing&#34;&gt;Test programs that use &lt;code&gt;sh&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sh&lt;/code&gt; can be patched in your tests the typical way, with &lt;code&gt;unittest.mock.patch()&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;unittest.mock&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;patch&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sh&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@patch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;sh.pwd&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_code_styling/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Don&#39;t use try-except to initialize dictionaries.&lt;/p&gt; &lt;p&gt;Instead of:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setdefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the awesome, life saving library &lt;code&gt;pydantic_factories&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Goldziher/pydantic-factories&#34;&gt;Pydantic factories&lt;/a&gt; is a library offers powerful mock data generation capabilities for pydantic based models and dataclasses. It automatically creates &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt; factories from a &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;pydantic&lt;/a&gt; model.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UUID4&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic_factories&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ModelFactory&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UUID4&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;hobbies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;birthday&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PersonFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ModelFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;__model__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PersonFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Moved the semantic versioning commit guidelines to the semver article.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deepdiff&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;DeepDiff&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Remove murmur from the installation steps.&lt;/p&gt; &lt;p&gt;It seems it&#39;s the default for the new versions&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add warning that regular expressions are not yet supported.&lt;/p&gt; &lt;p&gt;Until &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;#239&lt;/a&gt; is merged, the official library doesn&#39;t support searching for regular expressions. You can use &lt;a href=&#34;https://github.com/lyz-code/deepdiff&#34;&gt;my fork&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Remove advice to use my fork instead.&lt;/p&gt; &lt;p&gt;The original one has already merged my &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;PR&lt;/a&gt; &lt;code&gt;＼\ ٩( ᐛ )و /／&lt;/code&gt;. Beware though as the &lt;code&gt;regexp&lt;/code&gt; are not enabled by default (against my will). You need to use the &lt;code&gt;use_regexp=True&lt;/code&gt; as an argument to &lt;code&gt;grep&lt;/code&gt; or &lt;code&gt;DeepSearch&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;properties&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;Properties&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to generate your own attributes.&lt;/p&gt; &lt;p&gt;We earlier used lazy_attribute but if you want to use Faker inside the attribute definition, you&#39;re going to have a bad time. The new solution uses the creation of custom Fake providers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/#word-from-enum-choices&#34;&gt;Explain how to use &lt;code&gt;Enum&lt;/code&gt; with factoryboy.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/#automatically-generate-a-factory-from-a-pydantic-model&#34;&gt;Automatically generate a factory from a pydantic model.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sadly &lt;a href=&#34;https://github.com/FactoryBoy/factory_boy/issues/869&#34;&gt;it&#39;s not yet supported&lt;/a&gt;, &lt;a href=&#34;https://github.com/FactoryBoy/factory_boy/issues/836&#34;&gt;it will at some point though&lt;/a&gt;. If you&#39;re interested in following this path, you can start with &lt;a href=&#34;https://gist.github.com/mgaitan/dcbe08bf44a5af696f2af752624ac11b&#34;&gt;mgaitan snippet&lt;/a&gt; for dataclasses.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Give an overview on Python&#39;s @property decorator.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;package-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Package Management&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to create your own provider.&lt;/p&gt; &lt;p&gt;Useful to generate custom objects for testing purposes.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-optional-data&#34;&gt;Explain how to create &lt;code&gt;Optional&lt;/code&gt; data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/faker-optional/&#34;&gt;&lt;code&gt;faker-optional&lt;/code&gt;&lt;/a&gt; is a custom faker provider that acts as a wrapper over other Faker providers to return their value or &lt;code&gt;None&lt;/code&gt;. Useful to create data of type &lt;code&gt;Optional[Any]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-a-random-string-with-a-defined-format&#34;&gt;Create a random string with a defined format.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;faker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pystr_format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;id-#######{{random_letter}}&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;id-6443059M&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-an-ip-address&#34;&gt;Create an IP address.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;faker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipv4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want a CIDR, use &lt;code&gt;network=True&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Compare Poetry, Pipenv and PDM package management tools.&lt;/p&gt; &lt;p&gt;Pipenv has broad support. It is an official project of the Python Packaging Authority, alongside pip. It&#39;s also supported by the Heroku Python buildpack, which is useful for anyone with Heroku or Dokku-based deployment strategies.&lt;/p&gt; &lt;p&gt;Poetry is a one-stop shop for dependency management and package management. It simplifies creating a package, managing its dependencies, and publishing it. Compared to Pipenv, Poetry&#39;s separate add and install commands are more explicit, and it&#39;s faster for everything except for a full dependency install.&lt;/p&gt; &lt;p&gt;I liked Poetry most, and in the end I didn&#39;t analyze &lt;code&gt;pdm&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/#solver&#34;&gt;Describe what a dependency solver does.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A Solver tries to find a working set of dependencies that all agree with each other. By looking back in time, it’s happy to solve very old versions of packages if newer ones are supposed to be incompatible. This can be helpful, but is slow, and also means you can easily get a very ancient set of packages when you thought you were getting the latest versions.&lt;/p&gt; &lt;p&gt;In the section we compare Pip&#39;s and Poetry&#39;s solver.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/#poetry&#34;&gt;Add downsides of Poetry.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It does upper version capping by default, which is becoming &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;a big problem&lt;/a&gt; in the Python environment.&lt;/p&gt; &lt;p&gt;This is specially useless when you add dependencies that follow &lt;a href=&#34;https://lyz-code.github.io/blue-book/calendar_versioning/&#34;&gt;CalVer&lt;/a&gt;. &lt;code&gt;poetry add&lt;/code&gt; packaging will still do &lt;code&gt;^21&lt;/code&gt; for the version it adds. You shouldn’t be capping versions, but you really shouldn’t be capping CalVer.&lt;/p&gt; &lt;p&gt;It&#39;s equally troublesome that it upper pins &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#pinning-the-python-version-is-special&#34;&gt;the python version&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;fastapi&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/&#34;&gt;FastAPI&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce FastAPI the pydantic friendly python framework to build APIs.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt; is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Sum up the basic documentation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-server&#34;&gt;Sending data to the server&lt;/a&gt;: Through &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#path-parameters&#34;&gt;path parameters&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#query-parameters&#34;&gt;query parameters&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#body-requests&#34;&gt;body requests&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#handling-errors&#34;&gt;Handle errors&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#updating-data&#34;&gt;Update data&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#openapi-configuration&#34;&gt;Configure OpenAPI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#testing&#34;&gt;Test FastAPI applications&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And add a lot of &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#interesting-features-to-explore&#34;&gt;more interesting features&lt;/a&gt; I&#39;ve discovered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#logging-to-sentry&#34;&gt;Explain how to log exceptions to sentry.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-client&#34;&gt;Explain how to send raw data to the client.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://fastapi.tiangolo.com/advanced/response-directly/#returning-a-custom-response&#34;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#configuration&#34;&gt;Explain how to configure the application.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#inject-testing-configuration&#34;&gt;Explain how to inject a testing configuration in the tests.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#deploy-with-docker&#34;&gt;Explain how to deploy it using Docker.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#logging&#34;&gt;Explain how to show logging messages in the logs.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#create-redirections&#34;&gt;Explain how to make redirections with fastapi.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#run-a-fastapi-server-in-the-background-for-testing-purposes&#34;&gt;Explain how to run a FastAPI server in the background for testing purposes.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Improvement: Add link to the Awesome FastAPI page.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;plugin-system&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_plugin_system/&#34;&gt;Plugin System&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add beets system as a first approach.&lt;/p&gt; &lt;p&gt;When building Python applications, it&#39;s good to develop the core of your program, and allow extension via plugins.&lt;/p&gt; &lt;p&gt;I still don&#39;t know how to do it, but &lt;a href=&#34;https://beets.readthedocs.io/en/stable/dev/plugins.html&#34;&gt;Beets plugin system&lt;/a&gt; looks awesome for a first start.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;flask-restplus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/flask_restplus/&#34;&gt;Flask Restplus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Flask-RESTPlus library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://flask-restplus.readthedocs.io/en/stable/&#34;&gt;Flask-RESTPlus&lt;/a&gt; is an extension for Flask that adds support for quickly building REST APIs, but I&#39;d use &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/&#34;&gt;FastAPI&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;optimization&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_optimization/&#34;&gt;Optimization&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_optimization/#tips&#34;&gt;Add tips on how to optimize your python command line tools.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;#minimize-the-relative-import-statements-on-command-line-tools&#34;&gt;Minimize the relative import statements on command line tools&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;When developing a library, it&#39;s common to expose the main objects into the package &lt;code&gt;__init__.py&lt;/code&gt; under the variable &lt;code&gt;__all__&lt;/code&gt;. The problem with command line programs is that each time you run the command it will load those objects, which can mean an increase of 0.5s or even a second for each command, which is unacceptable. * &lt;a href=&#34;#dont-dynamically-install-the-package&#34;&gt;Don&#39;t dynamically install the package&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;If you install the package with &lt;code&gt;pip install -e .&lt;/code&gt; you will see an increase on the load time of ~0.2s. It is useful to develop the package, but when you use it, do so from a virtualenv that installs it directly without the &lt;code&gt;-e&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gitpython&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/&#34;&gt;GitPython&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gitpython.readthedocs.io&#34;&gt;GitPython&lt;/a&gt; is a python library used to interact with git repositories, high-level like git-porcelain, or low-level like git-plumbing.&lt;/p&gt; &lt;p&gt;It provides abstractions of git objects for easy access of repository data, and additionally allows you to access the git repository more directly using either a pure python implementation, or the faster, but more resource intensive git command implementation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Initialize or load repositories.&lt;/li&gt; &lt;li&gt;Make commits.&lt;/li&gt; &lt;li&gt;Interact with the history.&lt;/li&gt; &lt;li&gt;Test applications that use it.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to get the working directory of a repo.&lt;/p&gt; &lt;p&gt;Using the &lt;code&gt;working_dir&lt;/code&gt; attribute.&lt;/p&gt; &lt;p&gt;perf(python_snippets#Group a list of dictionaries by a specific key) Explain how to group a list of dictionaries by a specific key&lt;/p&gt; &lt;p&gt;With &lt;code&gt;itertools.groupby&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#clone-a-repository&#34;&gt;Clone a repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Repo&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;Repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clone_from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#create-a-branch&#34;&gt;Create a branch.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create_head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;new_branch&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;active_branch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# It&#39;s not checked out yet&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reference&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_detached&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#get-the-latest-commit-of-a-repository&#34;&gt;Get the latest commit of a repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hexsha&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#excluding-code-from-coverage&#34;&gt;Explain how to exclude code from the coverage report.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add &lt;code&gt;# pragma: no cover&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#running-tests-in-parallel&#34;&gt;Explain how to run tests in parallel.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pytest-xdist&lt;/code&gt; makes it possible to run the tests in parallel, useful when the test suit is large or when the tests are slow.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pytest-xdist
pytest -n auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#setting-a-timeout-for-your-tests&#34;&gt;Explain how to set a timeout for your tests.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;a href=&#34;https://pypi.org/project/pytest-timeout/&#34;&gt;pytest-timeout&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#rerun-tests-that-fail-sometimes&#34;&gt;Explain how to rerun tests that fail sometimes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://pypi.org/project/pytest-rerunfailures/&#34;&gt;pytest-rerunfailures&lt;/a&gt; that is a plugin for pytest that re-runs tests to eliminate intermittent failures. Using this plugin is generally a bad idea, it would be best to solve the reason why your code is not reliable. It&#39;s useful when you rely on non robust third party software in a way that you can&#39;t solve, or if the error is not in your code but in the testing code, and again you are not able to fix it.&lt;/p&gt; &lt;p&gt;feat(python_snippets#Create combination of elements in groups of two): Explain how to create combination of elements in groups of two&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itertools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;combinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ABC&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#excluding-code-from-coverage&#34;&gt;Exclude the &lt;code&gt;if TYPE_CHECKING&lt;/code&gt; code from the coverage.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want &lt;a href=&#34;https://github.com/nedbat/coveragepy/issues/831&#34;&gt;other code to be excluded&lt;/a&gt;, for example the statements inside the &lt;code&gt;if TYPE_CHECKING:&lt;/code&gt; add to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.coverage.report]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;exclude_lines&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Have to re-enable the standard pragma&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;pragma: no cover&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Type checking can not be tested&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;if TYPE_CHECKING:&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce goodconf the pyndantic YAML friendly configuration management.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lincolnloop/goodconf/&#34;&gt;goodconf&lt;/a&gt; is a thin wrapper over Pydantic&#39;s settings management. Allows you to define configuration variables and load them from environment or JSON/YAML file. Also generates initial configuration files and documentation for your defined configuration.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#capture-deprecation-warnings&#34;&gt;Capture deprecation warnings.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Python and its ecosystem does not have an assumption of strict SemVer, and has a tradition of providing deprecation warnings. If you have good CI, you should be able to catch warnings even before your users see them. Try the following pytest configuration:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.pytest.ini_options]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This will turn warnings into errors and allow your CI to break before users break.&lt;/p&gt; &lt;p&gt;Other sections added are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#ensuring-code-triggers-a-deprecation-warning&#34;&gt;Ensuring code triggers a deprecation warning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#asserting-warnings-with-the-warns-function&#34;&gt;Asserting warnings with the warns function&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#recording-warnings&#34;&gt;Recording warnings&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to show the message in custom exceptions.&lt;/li&gt; &lt;li&gt;New: Explain how to import a module or object from within a python program.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s learned python tricks.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-systems-timezone-and-use-it-in-datetime&#34;&gt;Get system&#39;s timezone and use it in datetime&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#capitalize-a-sentence&#34;&gt;Capitalize a sentence&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-last-monday-datetime&#34;&gt;Get the last monday datetime&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use Jinja2.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34;&gt;Jinja2&lt;/a&gt; is a modern and designer-friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment.&lt;/p&gt; &lt;p&gt;Add installation, usage and basic and advanced template guidelines.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add date management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-week-number-of-a-datetime&#34;&gt;Get the week number of a datetime&lt;/a&gt;: &lt;code&gt;datetime.datetime(2010, 6, 16).isocalendar()[1]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-monday-of-a-week-number&#34;&gt;Get the Monday of a week number&lt;/a&gt;:&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;2013-W26&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-1&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;%Y-W%W-%w&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-month-name-from-a-number&#34;&gt;Get the month name from a number&lt;/a&gt;:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;calendar&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;March&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; * &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-ordinal-from-number&#34;&gt;Get ordinal from number&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_to_ordinal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;&#39;&#39;&#39;Convert an integer into its ordinal representation.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    make_ordinal(0)   =&amp;gt; &#39;0th&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(3)   =&amp;gt; &#39;3rd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(122) =&amp;gt; &#39;122nd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(213) =&amp;gt; &#39;213th&#39;&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        number: Number to convert&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Returns:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        ordinal representation of the number&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#39;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;st&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;nd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;rd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add file management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-the-extension-of-a-file&#34;&gt;Remove the extension of a file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#iterate-over-the-files-of-a-directory&#34;&gt;Iterate over the files of a directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#create-directory&#34;&gt;Create directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#touch-a-file&#34;&gt;Touch a file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-first-day-of-next-month&#34;&gt;Get the first day of next month.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-directories-and-files&#34;&gt;Explain how to test directories and files.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Explain how to install dependencies from git repositories.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source&#34;&gt;pip you can&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install git+git://github.com/path/to/repository@master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want &lt;a href=&#34;https://stackoverflow.com/questions/32688688/how-to-write-setup-py-to-include-a-git-repository-as-a-dependency/54794506#54794506&#34;&gt;to hard code it in your &lt;code&gt;setup.py&lt;/code&gt;&lt;/a&gt;, you need to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;install_requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;s1&#34;&gt;&#39;some-pkg @ git+ssh://git@github.com/someorgname/pkg-repo-name@v1.1#egg=some-pkg&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to create PyPI valid packages with direct dependencies.&lt;/p&gt; &lt;p&gt;It looks like PyPI don&#39;t want pip to reach out to URLs outside their site when installing from PyPI. So you can&#39;t define the direct dependencies in the &lt;code&gt;install_requires&lt;/code&gt;. Instead you need to install them in a &lt;code&gt;PostInstall&lt;/code&gt; custom script. Ugly as hell.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Add warning about the method to use direct dependencies.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Last time I used this solution, when I added the library on a &lt;code&gt;setup.py&lt;/code&gt; the direct dependencies weren&#39;t installed :S&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#convert-html-to-readable-plaintext&#34;&gt;Explain how to convert html code to readable plaintext.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install html2text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;html2text&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;foobar.html&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html2text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html2text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#parse-a-datetime-from-a-string&#34;&gt;Explain how to parse a datetime from a string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dateutil&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Aug 28 1999 12:00AM&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# datetime.datetime(1999, 8, 28, 0, 0)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#find-a-static-file-of-a-python-module&#34;&gt;Explain how to find a static file of a python module.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pkg_resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;file_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkg_resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resource_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;my_package&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;assets/config.yaml&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#delete-a-file&#34;&gt;Explain how to delete a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;demofile.txt&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#measure-elapsed-time-between-lines-of-code&#34;&gt;Explain how to measure elapsed time between lines of code.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#when-to-use-isinstance-and-when-to-use-type&#34;&gt;Document when to use &lt;code&gt;isinstance&lt;/code&gt; and when to use &lt;code&gt;type&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;isinstance&lt;/code&gt; takes into account inheritance, while &lt;code&gt;type&lt;/code&gt; doesn&#39;t. So if you want to make sure you&#39;re dealing with a specific class, and not any of it&#39;s parents or subclasses, use &lt;code&gt;type(obj) == class&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-if-a-dictionary-is-a-subset-of-another&#34;&gt;Check if a dictionary is a subset of another.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have two dictionaries &lt;code&gt;big = {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;c&#39;:3}&lt;/code&gt; and &lt;code&gt;small = {&#39;c&#39;: 3, &#39;a&#39;: 1}&lt;/code&gt;, and want to check whether &lt;code&gt;small&lt;/code&gt; is a subset of &lt;code&gt;big&lt;/code&gt;, use the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;small&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;big&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#group-or-sort-a-list-of-dictionaries-or-objects-by-a-specific-key&#34;&gt;Group or sort a list of dictionaries or objects by a specific key.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Improve previous method with the concepts learned from the &lt;a href=&#34;https://docs.python.org/3/howto/sorting.html#sorting-basics&#34;&gt;official docs&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Particularly improve the sorting by multiple keys with the next function:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;multisort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;reversed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attrgetter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multisort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;student_objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;grade&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;dave&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;jane&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-default-directories-and-files-for-a-command-line-program&#34;&gt;Install default directories and files for a command line program.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve been trying for a long time to configure &lt;code&gt;setup.py&lt;/code&gt; to run the required steps to configure the required directories and files when doing &lt;code&gt;pip install&lt;/code&gt; without success.&lt;/p&gt; &lt;p&gt;Finally, I decided that the program itself should create the data once the &lt;code&gt;FileNotFoundError&lt;/code&gt; exception is found. That way, you don&#39;t penalize the load time because if the file or directory exists, that code is not run.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#locate-element-in-list&#34;&gt;Locate element in list.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#transpose-a-list-of-lists&#34;&gt;Transpose a list of lists.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-the-type-of-a-list-of-strings&#34;&gt;Check the type of a list of strings.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_is_list_of_lists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Check if data is a list of strings.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#replace-all-characters-of-a-string-with-another-character&#34;&gt;Replace all characters of a string with another character.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;mystring&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;_&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mystring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#make-a-flat-list-of-lists-with-a-list-comprehension&#34;&gt;Make a flat list of lists with a list comprehension.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There is no nice way to do it :(. The best I&#39;ve found is:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;flat_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sublist&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sublist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-a-substring-from-the-end-of-a-string&#34;&gt;Remove a substring from the end of a string.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;On Python 3.9 and newer you can use the &lt;code&gt;removeprefix&lt;/code&gt; and &lt;code&gt;removesuffix&lt;/code&gt; methods to remove an entire substring from either side of the string:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;abcdc.com&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removesuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.com&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# Returns &#39;abcdc&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removeprefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;abcdc.&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Returns &#39;com&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;On Python 3.8 and older you can use &lt;code&gt;endswith&lt;/code&gt; and slicing:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;abcdc.com&#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.com&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#capture-the-stdout-of-a-function&#34;&gt;Capture the stdout of a function.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;contextlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redirect_stdout&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringIO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redirect_stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;do_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getvalue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#make-temporal-directory&#34;&gt;Make temporal directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tempfile&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dirpath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tempfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdtemp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-working-directory-of-a-test&#34;&gt;Change the working directory of a test.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;unittest&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src.main&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_cwd&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestMain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unittest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TestCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_get_cwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;src&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;testing get_cwd()&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_cwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertIsNotNone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertEqual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;src&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-a-directory&#34;&gt;Copy a directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copytree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-working-directory-of-a-test&#34;&gt;Use fixture to change the working directory of a test.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The previous code didn&#39;t work, instead use the next fixture:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;change_test_dir&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;change_test_dir_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SubRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fspath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;invocation_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#ipv4-regular-expression&#34;&gt;IPv4 regular expression.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;(?&amp;lt;![-\.\d])(?:0{0,2}?[0-9]\.|1\d?\d?\.|2[0-5]?[0-5]?\.)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{3}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
    &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;(?:0{0,2}?[0-9]|1\d?\d?|2[0-5]?[0-5]?)(?![\.\d])&#34;^[0-9]{1,3}*$&#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-the-elements-of-a-list-from-another&#34;&gt;Remove the elements of a list from another.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-logging-level-of-a-library&#34;&gt;Change the logging level of a library.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sh_logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;sh&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sh_logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WARN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-all-subdirectories-of-a-directory&#34;&gt;Get all subdirectories of a directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#move-a-file&#34;&gt;Move a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/current/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;path/to/new/destination/for/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-a-file&#34;&gt;Copy a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copyfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dest_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to write good test docstrings.&lt;/p&gt; &lt;p&gt;Both &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/#without-template&#34;&gt;without a template&lt;/a&gt; and using the &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/#given-when-then&#34;&gt;Given When Then style&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;networkx&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/networkx/&#34;&gt;NetworkX&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://networkx.org/&#34;&gt;NetworkX&lt;/a&gt; is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pexpect&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pexpect/&#34;&gt;pexpect&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the pexpect python library.&lt;/p&gt; &lt;p&gt;A pure Python module for spawning child applications; controlling them; and responding to expected patterns in their output. Pexpect works like Don Libes’ Expect. Pexpect allows your script to spawn a child application and control it as if a human were typing commands.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pexpect/#read-output-of-command&#34;&gt;Explain how to read the output of a command run by pexpect.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pexpect&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pexpect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spawn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ls&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pexpect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;prompt-toolkit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/&#34;&gt;Prompt Toolkit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the tui python library.&lt;/p&gt; &lt;p&gt;Useful to build text-based user interfaces, it allows the creation of intelligent prompts, dialogs, and full screen ncurses-like applications.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#full-screen-applications&#34;&gt;Basic concepts of building full screen applications with python prompt toolkit.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;prompt_toolkit&lt;/code&gt; can be used to create complex full screen terminal applications. Typically, an application consists of a layout (to describe the graphical part) and a set of key bindings.&lt;/p&gt; &lt;p&gt;In the section we cover:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#the-layout&#34;&gt;The layout&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#the-controls&#34;&gt;The controls&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#key-bindings&#34;&gt;How to use key bindings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#styles&#34;&gt;How to apply styles&lt;/a&gt;&lt;/li&gt; &lt;li&gt;A difficult ordered list of &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#examples&#34;&gt;examples&lt;/a&gt; to get a grasp of these concepts with simple working code.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to initialize attributes.&lt;/p&gt; &lt;p&gt;Use validators to initialize attributes&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Name the pros and cons of using the library.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to create bidirectional relationship between entities.&lt;/li&gt; &lt;li&gt;New: Warn on the lack of TypeDict support.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: How to solve the No name &#39;BaseModel&#39; in module &#39;pydantic&#39;.&lt;/p&gt; &lt;p&gt;It&#39;s still a patch, so I&#39;ve also monitored the relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/#pydantic-errors&#34;&gt;issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Change parse_obj definition to find how to import pydantic models from dictionary.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#set-private-attributes&#34;&gt;Explain how to use private attributes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/models/#private-model-attributes&#34;&gt;&lt;code&gt;PrivateAttr&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#update-entity-attributes-with-a-dictionary&#34;&gt;Explain how to update entity attributes with a dictionary.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can create a new object with the new data using the &lt;code&gt;update&lt;/code&gt; argument of the &lt;code&gt;copy&lt;/code&gt; entity method.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#copy-produces-copy-that-modifies-the-original&#34;&gt;Copy produces copy that modifies the original.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When copying a model, changing the value of an attribute on the copy updates the value of the attribute on the original. This only happens if &lt;code&gt;deep != True&lt;/code&gt;. To fix it use: &lt;code&gt;model.copy(deep=True)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#define-fields-to-exclude-from-exporting-at-config-level&#34;&gt;Define fields to exclude from exporting at config level.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Eagerly waiting for the release of the version 1.9 because you can &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/issues/660&#34;&gt;define the fields to exclude in the &lt;code&gt;Config&lt;/code&gt; of the model&lt;/a&gt; using something like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fields&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;alias&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Amount&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;exclude&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;exclude&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;dump_alias&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;external_id&#39;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The release it&#39;s taking its time because &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/discussions/3228&#34;&gt;the developer&#39;s gremlin and salaried work are sucking his time off&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#field-customization&#34;&gt;Field customization.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Optionally, the &lt;code&gt;Field&lt;/code&gt; function can be used to provide extra information about the field and validations. Such as the &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and many others&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to insert, update, select data.&lt;/li&gt; &lt;li&gt;New: Explain how to join tables.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-mysql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;Python Mysql&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Give examples on joins for each relationship type.&lt;/li&gt; &lt;li&gt;New: Explain how to interact with MySQL databases with Python.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the syntax of the left joins.&lt;/p&gt; &lt;p&gt;Instead of using &lt;code&gt;ON users.id == addresses.user_id&lt;/code&gt;, use &lt;code&gt;ON users.id = addresses.user_id&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;questionary&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;questionary&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce tui python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://questionary.readthedocs.io&#34;&gt;questionary&lt;/a&gt; is a Python library for effortlessly building pretty command line interfaces. It makes it very easy to query your user for input.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the link to the examples.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#conditionally-skip-questions&#34;&gt;Conditionally skip questions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes it is helpful to be able to skip a question based on a condition. To avoid the need for an if around the question, you can pass the condition when you create the question:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DISABLED&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;questionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;confirm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Are you amazed?&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;skip_if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DISABLED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#don&#39;t-highlight-the-selected-option-by-default&#34;&gt;Don&#39;t highlight the selected option by default.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you don&#39;t want to highlight the default choice in the &lt;code&gt;select&lt;/code&gt; question use the next style:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Style&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;Question title: &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;choices&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;selected&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;noreverse&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rich&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/&#34;&gt;rich&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python cli builder library and it&#39;s progress bar.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/willmcgugan/rich&#34;&gt;Rich&lt;/a&gt; is a Python library for rich text and beautiful formatting in the terminal.&lt;/p&gt; &lt;p&gt;Check out the beautiful progress bar:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install rich
python -m rich.progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#tables&#34;&gt;Explain how to build pretty tables with rich.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.console&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.table&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Star Wars Movies&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Released&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;justify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;right&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;cyan&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no_wrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Title&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;magenta&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Box Office&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;justify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;right&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;green&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 20, 2019&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Star Wars: The Rise of Skywalker&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$952,110,690&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;May 25, 2018&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Solo: A Star Wars Story&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$393,151,347&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 15, 2017&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Star Wars Ep. V111: The Last Jedi&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$1,332,539,889&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 16, 2016&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Rogue One: A Star Wars Story&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$1,332,439,889&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#rich-text&#34;&gt;Explain how to print pretty text with rich.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.console&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.text&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assemble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;bold magenta&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34; World!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ruamel-yaml&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/ruamel_yaml/&#34;&gt;Ruamel YAML&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Suggest to use ruyaml instead of ruamel.yaml.&lt;/p&gt; &lt;p&gt;As it&#39;s maintained by the community and versioned with git.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;selenium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/&#34;&gt;Selenium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use selenium with python.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#set-timeout-of-a-response&#34;&gt;Explain how to Set timeout of a response.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_page_load_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#chromedriver-hangs-up-unexpectedly&#34;&gt;Explain how to fix when Chromedriver hangs up unexpectedly.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;DBUS_SESSION_BUS_ADDRESS&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/dev/null&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/#regexp&#34;&gt;Explain how to implement the REGEXP operator with Python.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;requests&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/requests/&#34;&gt;Requests&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the requests python library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rq&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/rq/&#34;&gt;Rq&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add note to test arq.&lt;/p&gt; &lt;p&gt;arq is a similar library that can be better.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tenacity&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tenacity/&#34;&gt;Tenacity&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Tenacity python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jd/tenacity&#34;&gt;Tenacity&lt;/a&gt; is an Apache 2.0 licensed general-purpose retrying library, written in Python, to simplify the task of adding retry behavior to just about anything.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tinydb&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/&#34;&gt;TinyDB&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/#serializing-custom-data&#34;&gt;Explain how to serialize datetime objects.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Solve the autoincrementation not working bug.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#regexp&#34;&gt;Explain how to configure sqlite to be able to use the REGEXP operator.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s not enabled by default.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add rqlite as an interesting distributed solution of.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#get-the-columns-of-a-database&#34;&gt;Get the columns of a database.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PRAGMA table_info(table_name);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;promql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/&#34;&gt;Promql&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#generating-range-vectors-from-return-values-in-prometheus-queries&#34;&gt;Generating range vectors from return values in Prometheus queries.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;javascript&#34;&gt;Javascript&lt;/h3&gt; &lt;h4 id=&#34;mermaidjs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;MermaidJS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the diagram library and how to make flowchart diagrams.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mermaid-js.github.io&#34;&gt;MermaidJS&lt;/a&gt; is a Javascript library that lets you create diagrams using text and code.&lt;/p&gt; &lt;p&gt;It can render the &lt;a href=&#34;https://mermaid-js.github.io/mermaid/#/?id=diagrams-that-mermaid-can-render&#34;&gt;next diagram types&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Flowchart&lt;/li&gt; &lt;li&gt;Sequence.&lt;/li&gt; &lt;li&gt;Gantt&lt;/li&gt; &lt;li&gt;Class&lt;/li&gt; &lt;li&gt;Git graph&lt;/li&gt; &lt;li&gt;Entity Relationship&lt;/li&gt; &lt;li&gt;User journey&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;issues&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/&#34;&gt;Issues&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the issue tracking document.&lt;/p&gt; &lt;p&gt;I haven&#39;t found a tool to monitor the context it made me track certain software issues, so I get lost when updates come. Until a tool shows up, I&#39;ll use the good old markdown to keep track of them.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Gadgetbridge improvements&lt;/li&gt; &lt;li&gt;Ombi improvements&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Monitor today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mkdocs migration to 7.x is giving errors with the search bar and repo stats.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Track python dependency errors.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Gitdb has updated smmap.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Jellyfin 10.7.1 broke the login page.&lt;/p&gt; &lt;p&gt;Don&#39;t upgrade till it&#39;s solved, as the rollback is not easy.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Jellyfin login page problem after upgrade to 10.7.X is solved.&lt;/p&gt; &lt;p&gt;Surprisingly the instructions in &lt;a href=&#34;https://github.com/jellyfin/jellyfin/issues/5489&#34;&gt;#5489&lt;/a&gt; solved it.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;,.bak&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; Go to JF URL, get asked to log &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; even though there are no Users &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; the JF DB now&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;.bak,&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/devops/&#34;&gt;DevOps&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Comment on the DevOps pitfalls and update the learn path.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#keep-charts-updated&#34;&gt;Improve the helmfile chart update process.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Updating charts with &lt;code&gt;helmfile&lt;/code&gt; is easy as long as you don&#39;t use environments, you run &lt;code&gt;helmfile deps&lt;/code&gt;, then &lt;code&gt;helmfile diff&lt;/code&gt; and finally &lt;code&gt;helmfile apply&lt;/code&gt;. The tricky business comes when you want to use environments to reuse your helmfile code and don&#39;t repeat yourself. I&#39;ve updated the process to include this case.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#multi-environment-project-structure&#34;&gt;Document the directory and files structure for multi-environment projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#using-helmfile-environments&#34;&gt;Document how to use helmfile environments to follow DRY.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#avoiding-code-repetition&#34;&gt;Document how to avoiding code repetition.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Besides environments, &lt;code&gt;helmfile&lt;/code&gt; gives other useful tricks to prevent the illness of code repetition, such as &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#using-release-templates&#34;&gt;using release templates&lt;/a&gt;, or &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#layering-the-state&#34;&gt;layering the state&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#managing-dependencies&#34;&gt;Document how to manage dependencies between the charts, to be able to use concurrency.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Helmfile support concurrency with the option &lt;code&gt;--concurrency=N&lt;/code&gt; so we can take advantage of it and improve our deployment speed, but to ensure it works as expected we have to define the dependencies among charts. For example, if an application needs a database, it has to be deployed before hand.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use environment name instead of get values.&lt;/p&gt; &lt;p&gt;Instead of &lt;code&gt;.Environment.Name&lt;/code&gt;, in theory you could have used &lt;code&gt;.Vars | get &#34;environment&#34;&lt;/code&gt;, which could have prevented the variables and secrets of the default environment will need to be called &lt;code&gt;default_values.yaml&lt;/code&gt;, and &lt;code&gt;default_secrets.yaml&lt;/code&gt;, which is misleading. But you can&#39;t use &lt;code&gt;.Values&lt;/code&gt; in the &lt;code&gt;helmfile.yaml&lt;/code&gt; as it&#39;s not loaded when the file is parsed, and you get an error. A solution would be to &lt;a href=&#34;https://github.com/roboll/helmfile/blob/8594944f6374454e6ddea61d04b201133798cd95/docs/writing-helmfile.md#layering-state-template-files&#34;&gt;layer the helmfile state files&lt;/a&gt; but I wasn&#39;t able to make it work.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to install a chart only in one environment.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;environments&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;production&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;releases&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;newrelic-agent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;installed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;eq .Environment.Name &#34;production&#34; | toYaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# snip&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add note that templates can&#39;t be used inside the secrets.&lt;/p&gt; &lt;p&gt;See &lt;a href=&#34;https://github.com/jkroepke/helm-secrets/issues/126&#34;&gt;this issue&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;terraform&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/&#34;&gt;Terraform&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce terraform and how to handle RDS secrets.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Terraform_(software)&#34;&gt;Terraform&lt;/a&gt; is an open-source infrastructure as code software tool created by HashiCorp. It enables users to define and provision a datacenter infrastructure using an awful high-level configuration language known as Hashicorp Configuration Language (HCL), or optionally JSON. Terraform supports a number of cloud infrastructure providers such as Amazon Web Services, IBM Cloud , Google Cloud Platform, DigitalOcean, Linode, Microsoft Azure, Oracle Cloud Infrastructure, OVH, or VMware vSphere as well as OpenNebula and OpenStack.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#ignore-the-change-of-an-attribute&#34;&gt;Explain how to ignore the change of an attribute.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;resource &#34;aws_instance&#34; &#34;example&#34; {
  # ...

  lifecycle {
    ignore_changes = [
      # Ignore changes to tags, e.g. because a management agent
      # updates these based on some ruleset managed elsewhere.
      tags,
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#define-the-default-value-of-an-variable-that-contains-an-object-as-empty&#34;&gt;Explain how to define the default value of an variable that contains an object as empty.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;variable &#34;database&#34; {
  type = object({
    size                 = number
    instance_type        = string
    storage_type         = string
    engine               = string
    engine_version       = string
    parameter_group_name = string
    multi_az             = bool
  })
  default     = null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#do-a-conditional-if-a-variable-is-not-null&#34;&gt;Explain how to do a conditional if a variable is not null.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;resource &#34;aws_db_instance&#34; &#34;instance&#34; {
  count                = var.database == null ? 0 : 1
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#conditionals&#34;&gt;How to do elif conditionals in terraform.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;locals&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;${ condition ? value : (elif-condition ? elif-value : else-value)}&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#debugging&#34;&gt;How to enable debug traces.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can set the &lt;code&gt;TF_LOG&lt;/code&gt; environmental variable to one of the log levels &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; to change the verbosity of the logs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helm-secrets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helm/helm_secrets/&#34;&gt;Helm Secrets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the repository url.&lt;/p&gt; &lt;p&gt;The last fork is dead, long live the &lt;a href=&#34;https://github.com/jkroepke/helm-secrets&#34;&gt;fork&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to install the plugin.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helm-git&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/helm_git/&#34;&gt;Helm Git&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Suggest version 0.8.0 until issue is solved.&lt;/p&gt; &lt;p&gt;Newer versions have a &lt;a href=&#34;https://github.com/aslafy-z/helm-git/issues/131&#34;&gt;bug&lt;/a&gt; that makes impossible to use helm_git with a repository that contains just one chart in the root of the git repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update installation method.&lt;/p&gt; &lt;p&gt;In the last version 0.11.1, the issue that forced us to use the version 0.8.0 was solved&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;kubernetes&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/#tools-to-test&#34;&gt;Add Velero as interesting tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://velero.io/&#34;&gt;Velero&lt;/a&gt; is a tool to backup and migrate Kubernetes resources and persistent volumes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;architecture&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_architecture/&#34;&gt;Architecture&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_architecture/#number-of-clusters&#34;&gt;Give suggestions on how to choose the number of kubernetes clusters to use.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can run a given set of workloads either on few large clusters (with many workloads in each cluster) or on many clusters (with few workloads in each cluster).&lt;/p&gt; &lt;p&gt;Here&#39;s a table that summarizes the pros and cons of various approaches:&lt;/p&gt; &lt;p&gt;&lt;img alt=&#34; &#34; src=&#34;../../img/number_k8s_clusters.svg&#34;/&gt; &lt;em&gt;Figure: Possibilities of number of clusters from &lt;a href=&#34;https://learnk8s.io/how-many-clusters&#34;&gt;learnk8s.io article&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jobs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/&#34;&gt;Jobs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Remove false positive alerts on failed jobs that succeeded.&lt;/p&gt; &lt;p&gt;A Kubernetes cronjob spawns jobs, if the first one fails, it will try to spawn a new one. If the second succeeds, the cronjob status should be success, but with the rule we had before, a successful job with failed past jobs will still raise an alert.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/#rerunning-failed-jobs&#34;&gt;Explain how to rerun failed cronjobs.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have a job that has failed after the 6 default retries, it will show up in your monitorization forever, to fix it, you can manually trigger the job.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl get job &lt;span class=&#34;s2&#34;&gt;&#34;your-job&#34;&lt;/span&gt; -o json &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq &lt;span class=&#34;s1&#34;&gt;&#39;del(.spec.selector)&#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq &lt;span class=&#34;s1&#34;&gt;&#39;del(.spec.template.metadata.labels)&#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; kubectl replace --force -f -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/#manually-creating-a-job-from-a-cronjob&#34;&gt;Manually creating a job from a cronjob.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl create job &lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; job_name &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt; -n &lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; namespace &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    --from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cronjobs/&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; cronjob_name&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/ci/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to troubleshoot the error: pathspec master did not match any file.&lt;/p&gt; &lt;p&gt;Remove all git hooks with &lt;code&gt;rm -r .git/hooks&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;flakehell&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/bandit/&#34;&gt;Flakehell&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to ignore errors.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update the git repository.&lt;/p&gt; &lt;p&gt;The existent repository has been archived in favor of &lt;a href=&#34;https://github.com/flakeheaven/flakeheaven&#34;&gt;this one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to patch the extended_default_ignore error for versions &amp;gt; 3.9.0.&lt;/p&gt; &lt;p&gt;Add to your your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.flakeheaven]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;extended_default_ignore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;[]  # add this&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/#troubleshooting&#34;&gt;Troubleshoot the &#39;Namespace&#39; object has no attribute &#39;extended_default_ignore&#39; error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.flakeheaven]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;extended_default_ignore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/#issues&#34;&gt;Latest version is broken.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It returns an &lt;a href=&#34;https://github.com/flakeheaven/flakeheaven/issues/22&#34;&gt;ImportError: cannot import name &#39;MergedConfigParser&#39; from &#39;flake8.options.config&#39;&lt;/a&gt;, wait for the issue to be solved before upgrading.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pyment&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pyment/&#34;&gt;Pyment&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Pyment.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dadadel/pyment&#34;&gt;Pyment&lt;/a&gt; is a python3 program to automatically create, update or convert docstrings in existing Python files, managing several styles.&lt;/p&gt; &lt;p&gt;As of 2021-11-17, the program is not production ready yet for me, I&#39;ve tested it in one of my projects and found some bugs that needed to be fixed before it&#39;s usable. Despite the number of stars, it looks like the development pace has dropped dramatically, so it needs our help to get better :).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dependency-managers&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/pip_tools/&#34;&gt;Dependency managers&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Sync the virtualenv libraries with the requirements files.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;piptools&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sync&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use &lt;code&gt;-c&lt;/code&gt; instead of &lt;code&gt;-r&lt;/code&gt; in the nested requirement files.&lt;/p&gt; &lt;p&gt;To avoid duplication of version pins.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate in favour of Poetry.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/#issues&#34;&gt;Monitor the issue to save the cruft config in &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;monitoring-comparison&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/monitoring_comparison/&#34;&gt;Monitoring Comparison&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Compare Nagios and Prometheus as monitoring.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve the comparison.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;State that nagios is not easy to configure. If you&#39;re used to it it is, otherwise it&#39;s not.&lt;/li&gt; &lt;li&gt;Add that grafana has a huge community building graphs.&lt;/li&gt; &lt;li&gt;Mention Thanos as the long term storage solution for Prometheus.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add the insights of a nagios power user.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Update open source and community analysis with nagios exchange.&lt;/li&gt; &lt;li&gt;Correct nagios community analysis with its trajectory&lt;/li&gt; &lt;li&gt;Correct the analysis of the high availability of nagios&lt;/li&gt; &lt;li&gt;Add the option to host the script exporter in a dedicated server&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;prometheus-install&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/&#34;&gt;Prometheus Install&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Add warning that helm 2 support is dropped.&lt;/p&gt; &lt;p&gt;If you want to use the helm chart above 11.1.7 you need to use helm 3.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/#upgrading-notes&#34;&gt;Add upgrading notes from 10.x -&amp;gt; 11.1.7.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;admonition warning&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;Don&#39;t upgrade to 12.x if you&#39;re still using Helm 2.&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/elasticsearch_exporter/&#34;&gt;Elasticsearch Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the prometheus elasticsearch exporter.&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://github.com/prometheus-community/elasticsearch_exporter&#34;&gt;elasticsearch exporter&lt;/a&gt; allows monitoring &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;Elasticsearch&lt;/a&gt; clusters with &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Explain how to install it, configure the grafana dashboards and the alerts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add more elasticsearch alerts.&lt;/p&gt; &lt;p&gt;Measure the search latency, search rate and create alerts on the garbage collector, json parser and circuit breaker errors&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add alert on low number of healthy master nodes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;scrum&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/&#34;&gt;Scrum&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the scrum framework.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_%28software_development%29&#34;&gt;Scrum&lt;/a&gt; is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;agile&lt;/a&gt; framework for developing, delivering, and sustaining complex products, with an initial emphasis on software development, although it has been used in other fields such as personal task management. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month and most commonly two weeks. The Scrum Team track progress in 15-minute time-boxed daily meetings, called daily scrums. At the end of the sprint, the team holds sprint review, to demonstrate the work done, a sprint retrospective to improve continuously, and a sprint planning to prepare next sprint&#39;s tasks.&lt;/p&gt; &lt;p&gt;In the article I explain:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I use to do &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-meetings&#34;&gt;the meetings&lt;/a&gt;: &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#daily-meetings&#34;&gt;Daily&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#refinement-meetings&#34;&gt;Refinement&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#retro-meetings&#34;&gt;Retros&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#review-meetings&#34;&gt;Reviews&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#planning-meetings&#34;&gt;Plannings&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-roles&#34;&gt;roles&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Some &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#definitions&#34;&gt;definitions&lt;/a&gt;, such as definition of done and definition of ready.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Add warning when migrating old code.&lt;/p&gt; &lt;p&gt;You may be tempted to migrate all your old code to this architecture once you fall in love with it. Truth being told, it&#39;s the best way to learn how to use it, but it&#39;s time expensive too! &lt;a href=&#34;https://github.com/lyz-code/clinv/pull/40&#34;&gt;The last refactor&lt;/a&gt; I did required a change of 60% of the code. The upside is that I reduced the total lines of code a 25%.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;architecture-decision-record&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/&#34;&gt;Architecture Decision Record&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Architecture Decision Records.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joelparkerhenderson/architecture_decision_record&#34;&gt;ADR&lt;/a&gt; are short text documents that captures an important architectural decision made along with its context and consequences.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/#adr-template&#34;&gt;Update the ADR template with the week learnings.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add the Proposals and Date sections&lt;/li&gt; &lt;li&gt;Explain the possible Status states.&lt;/li&gt; &lt;li&gt;Add an &lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;Ultisnip&lt;/a&gt; vim snippet.&lt;/li&gt; &lt;li&gt;Explain how I&#39;ve used it to create &lt;a href=&#34;https://github.com/lyz-code/mkdocs-newsletter&#34;&gt;mkdocs-newsletter&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to show relationship between ADRs.&lt;/p&gt; &lt;p&gt;Suggest a &lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;mermaidjs&lt;/a&gt; diagram to show the state of the project ADRs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tahoe/&#34;&gt;Linux&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Tahoe-LAFS.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tahoe-LAFS&#34;&gt;Tahoe-LAFS&lt;/a&gt; is a free and open, secure, decentralized, fault-tolerant, distributed data store and distributed file system.&lt;/p&gt; &lt;p&gt;Tahoe-LAFS is a system that helps you to store files. You run a client program on your computer, which talks to one or more storage servers on other computers. When you tell your client to store a file, it will encrypt that file, encode it into multiple pieces, then spread those pieces out among multiple servers. The pieces are all encrypted and protected against modifications. Later, when you ask your client to retrieve the file, it will find the necessary pieces, make sure they haven’t been corrupted, reassemble them, and decrypt the result.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;linux-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/&#34;&gt;Linux Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#split-a-file-into-many-with-equal-number-of-lines&#34;&gt;Explain how to split a file into many with equal number of lines.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;split -l &lt;span class=&#34;m&#34;&gt;200000&lt;/span&gt; filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#identify-what-a-string-or-file-contains&#34;&gt;Explain how to identify what a string or file contains.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;a href=&#34;https://github.com/bee-san/pyWhat&#34;&gt;pywhat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#allocate-space-for-a-virtual-filesystem&#34;&gt;Explain how to allocate space for a virtual filesystem.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fallocate -l 20G /path/to/file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#bypass-client-ssl-certificate-with-cli-tool&#34;&gt;Document how to bypass client SSL certificate with a cli tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Websites that require clients to authorize with an TLS certificate are difficult to interact with through command line tools that don&#39;t support this feature.&lt;/p&gt; &lt;p&gt;To solve it, we can use a transparent proxy that does the exchange for us.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;afew&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim_tabs/&#34;&gt;afew&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use tabs, buffers and windows in vim.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce afew.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/afewmail/afew&#34;&gt;afew&lt;/a&gt; is an &lt;a href=&#34;http://notmuchmail.org/initial_tagging/&#34;&gt;initial tagging script&lt;/a&gt; for &lt;a href=&#34;https://lyz-code.github.io/blue-book/notmuch/&#34;&gt;notmuch mail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Its basic task is to provide automatic tagging each time new mail is registered with &lt;code&gt;notmuch&lt;/code&gt;. In a classic setup, you might call it after &lt;code&gt;notmuch new&lt;/code&gt; in an offlineimap post sync hook.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;alot&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/&#34;&gt;alot&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/#issues&#34;&gt;Follow the issue to add elipsis instead of ... in vim-abolish.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Forget to use abolish to insert the elipsis symbol.&lt;/p&gt; &lt;p&gt;Tpope said that it&#39;s not going to happen.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce vim-easymotion.&lt;/p&gt; &lt;p&gt;EasyMotion provides a much simpler way to use some motions in vim. It takes the &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; out of &lt;code&gt;&amp;lt;number&amp;gt;w&lt;/code&gt; or &lt;code&gt;&amp;lt;number&amp;gt;f{char}&lt;/code&gt; by highlighting all possible choices and allowing you to press one key to jump directly to the target.&lt;/p&gt; &lt;p&gt;When one of the available motions is triggered, all visible text preceding or following the cursor is faded, and motion targets are highlighted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Move vim-test to the plugins page.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Typo.&lt;/p&gt; &lt;p&gt;There was a missing comma in the list.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/#vim-easymotion&#34;&gt;Explain how to configure the vim-easymotion movement keys.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce alot.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pazz/alot&#34;&gt;alot&lt;/a&gt; is a terminal-based mail user agent based on the &lt;a href=&#34;https://lyz-code.github.io/blue-book/notmuch/&#34;&gt;notmuch mail indexer&lt;/a&gt;. It is written in python using the urwid toolkit and features a modular and command prompt driven interface to provide a full MUA experience.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;activitywatch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/activitywatch/&#34;&gt;ActivityWatch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ActivityWatch tracking software.&lt;/p&gt; &lt;p&gt;It&#39;s a web application that can be installed both in Linux and Android that automatically tracks where you spend the time on.&lt;/p&gt; &lt;p&gt;Super interesting for life logging and automating stuff. Until I save some time to react on the data, I&#39;ll just gather it and see how to aggregate it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add week insights.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-web/issues/20&#34;&gt;The browser watcher is not very accurate&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The vim editor watcher doesn&#39;t add &lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-vim/issues/19&#34;&gt;git branch information&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Syncing data between devices &lt;a href=&#34;https://github.com/ActivityWatch/activitywatch/issues/35&#34;&gt;is not yet supported&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;beancount&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beancount/&#34;&gt;beancount&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the cli double entry accounting program.&lt;/li&gt; &lt;li&gt;New: Add links on how to use as a library.&lt;/li&gt; &lt;li&gt;Correction: Correct the git repository link.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;beets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/&#34;&gt;Beets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Beets the music management library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://beets.io/&#34;&gt;Beets&lt;/a&gt; is a music management library used to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a set of tools for manipulating and accessing your music.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dunst&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dunst/&#34;&gt;dunst&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dunst.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://dunst-project.org/&#34;&gt;Dunst&lt;/a&gt; is a lightweight replacement for the notification daemons provided by most desktop environments. It’s very customizable, isn’t dependent on any toolkits, and therefore fits into those window manager centric setups we all love to customize to perfection.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dynamic-dns&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dynamicdns/&#34;&gt;Dynamic DNS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Dynamic DNS concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_DNS&#34;&gt;Dynamic DNS (DDNS)&lt;/a&gt; is a method of automatically updating a name server in the Domain Name Server (DNS), often in real time, with the active DDNS configuration of its configured hostnames, addresses or other information.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;elasticsearch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reindex an index.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to restore only some indices.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -X POST &lt;span class=&#34;s2&#34;&gt;&#34;{{ url }}/_snapshot/{{ backup_path }}/{{ snapshot_name }}/_restore?pretty&#34;&lt;/span&gt; -H &lt;span class=&#34;s1&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -d&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;  &#34;indices&#34;: &#34;{{ index_to_restore }}&#34;,&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;}&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#fix-circuit-breakers-triggers&#34;&gt;Explain how to fix Circuit breakers triggers.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the way of closing an index.&lt;/p&gt; &lt;p&gt;Use a POST instead of a GET&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#knn-sizing&#34;&gt;Explain how to calculate the amount of memory required to do KNN operations.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#knn-warmup&#34;&gt;Explain how to do KNN warmup to speed up the queries.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#deal-with-the-aws-timeout-service&#34;&gt;Explain how to deal with the AWS service timeout.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gajim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gajim/&#34;&gt;Gajim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gajim.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gajim.org/&#34;&gt;Gajim&lt;/a&gt; is the best Linux XMPP client in terms of end-to-end encryption support as it&#39;s able to speak OMEMO.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;github-cli&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gh/&#34;&gt;Github cli&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Basic usage of gh.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cli/cli&#34;&gt;&lt;code&gt;gh&lt;/code&gt;&lt;/a&gt; is GitHub’s official command line tool.&lt;/p&gt; &lt;p&gt;It can be used to speed up common operations done with github, such as opening PRs, merging them or checking the checks of the PRs&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;graylog&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/graylog/&#34;&gt;Graylog&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Graylog.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.graylog.org/&#34;&gt;Graylog&lt;/a&gt; is a log management tool. The commit includes some tips like how to send a test message to check an input.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add interesting guidelines on &lt;a href=&#34;https://github.com/jvehent/haproxy-aws&#34;&gt;how to configure HAProxy in AWS&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hard-drive-health&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/&#34;&gt;Hard drive health&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Taking care of your hard drives.&lt;/p&gt; &lt;p&gt;Hard drives die, so we must be ready for that to happen. There are several solutions, such as using &lt;a href=&#34;https://en.wikipedia.org/wiki/RAID&#34;&gt;RAID&lt;/a&gt; to minimize the impact of a disk loss, but even then, we should monitor the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bad_sector&#34;&gt;bad sectors&lt;/a&gt; to see when are our disks dying.&lt;/p&gt; &lt;p&gt;In the article we talk about &lt;a href=&#34;https://en.wikipedia.org/wiki/S.M.A.R.T.&#34;&gt;S.M.A.R.T&lt;/a&gt; and how to solve some hard drive problems.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hushboard&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/husboard/&#34;&gt;Hushboard&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Husboard.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kryogenix.org/code/hushboard/&#34;&gt;Hushboard&lt;/a&gt; is an utility that mutes your microphone while you’re typing.&lt;/p&gt; &lt;p&gt;(Thanks &lt;a href=&#34;https://m0wer.github.io/memento/computer_science/gnu_linux/hushboard/&#34;&gt;M0wer&lt;/a&gt;!)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jellyfin&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/&#34;&gt;Jellyfin&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the media system and monitor interesting issues.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jellyfin.org/&#34;&gt;Jellyfin&lt;/a&gt; is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby&#39;s 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to fix the stuck at login page issue.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;,.bak&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service
systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;.bak,&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to fix the Intel Hardware transcoding.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it jellyfin /bin/bash
wget https://repo.jellyfin.org/releases/server/ubuntu/versions/jellyfin-ffmpeg/4.3.2-1/jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
dpkg -i jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#wrong-image-covers&#34;&gt;Explain how to fix the wrong image covers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Remove all the &lt;code&gt;jpg&lt;/code&gt; files of the directory and then fetch again the data from your favourite media management software.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#issues&#34;&gt;Track the issue of trailers not working.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#green-bars-in-the-reproduction&#34;&gt;Explain how to fix the green bars in the reproduction.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#stuck-at-login-page&#34;&gt;Fix the stuck at login page error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you use &lt;a href=&#34;https://github.com/hrfee/jfa-go&#34;&gt;jfa-go&lt;/a&gt; for the invites, you may &lt;a href=&#34;https://github.com/hrfee/jfa-go/issues/101&#34;&gt;need to regenerate all the user profiles&lt;/a&gt;, so that the problem is not introduced again.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#issues&#34;&gt;Track subtitles get delayed from the video on some devices issue.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ffmpeg&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ffmpeg/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the program and multiple of it&#39;s uses.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; is a complete, cross-platform solution to record, convert and stream audio and video.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kitty&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/&#34;&gt;Kitty&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce kitty the terminal emulator.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/&#34;&gt;kitty&lt;/a&gt; is a fast, feature-rich, GPU based terminal emulator written in C and Python with nice features for the keyboard driven humans like me.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/#scrollback-when-ssh-into-a-machine-doesn&#39;t-work&#34;&gt;Scrollback when ssh into a machine doesn&#39;t work.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This happens because the kitty terminfo files are not available on the server. You can ssh in using the following command which will automatically copy the terminfo files to the server:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kitty +kitten ssh myserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Enable infinite scrollback history.&lt;/p&gt; &lt;p&gt;To make the history scrollback infinite add the next lines:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scrollback_lines -1
scrollback_pager_history_size 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/#reasons-to-migrate-from-urxvt-to-kitty&#34;&gt;Reasons to migrate from urxvt to kitty.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It doesn&#39;t fuck up your terminal colors.&lt;/li&gt; &lt;li&gt;You can use &lt;a href=&#34;https://lyz-code.github.io/blue-book/peek/&#34;&gt;peek&lt;/a&gt; to record your screen.&lt;/li&gt; &lt;li&gt;Easier to extend.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;luks&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/&#34;&gt;LUKS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/#change-a-key&#34;&gt;Explain how to change a LUKS key.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cryptsetup luksChangeKey &lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; luks_device &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt; -s &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to develop your own plugins.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Document the Navigation object and the on_nav event.&lt;/p&gt; &lt;p&gt;Useful if you develop MkDocs plugins, it holds the information to build the navigation of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Describe navigation objects used in plugins.&lt;/p&gt; &lt;p&gt;Explain how to use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#page&#34;&gt;Page&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#section&#34;&gt;Section&lt;/a&gt;, and &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#sectionpage&#34;&gt;SectionPage&lt;/a&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: You need to edit the nav in the on_nav and not in the on_files event.&lt;/p&gt; &lt;p&gt;Even though it seems more easy to create the nav structure in the &lt;a href=&#34;#on_files&#34;&gt;&lt;code&gt;on_files&lt;/code&gt;&lt;/a&gt; event, by editing the &lt;code&gt;nav&lt;/code&gt; dictionary of the &lt;code&gt;config&lt;/code&gt; object, there is no way of returning the &lt;code&gt;config&lt;/code&gt; object in that event, so we&#39;re forced to do it in this event.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#adding-new-files&#34;&gt;Explain how to add files through a plugin.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Long story short, use the &lt;code&gt;on_config&lt;/code&gt; event instead of &lt;code&gt;on_files&lt;/code&gt; and &lt;code&gt;on_nav&lt;/code&gt; if you need to add files and want to change the navigation menu.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use MermaidJS diagrams.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test mkdocs plugins.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#material-theme-customizations&#34;&gt;Explain additions of version 7.1.0 of the material theme.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#color-palette-toggle&#34;&gt;Dark-light mode switch&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#back-to-top-button&#34;&gt;Back to top button&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mopidy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mopidy/&#34;&gt;Mopidy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the music server.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mopidy/mopidy&#34;&gt;Mopidy&lt;/a&gt; is an extensible music server written in Python, that plays perfectly with &lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/&#34;&gt;beets&lt;/a&gt; and the MPD ecosystem.&lt;/p&gt; &lt;p&gt;The awesome documentation, being Python based, the extension system, JSON-RPC, and JavaScript APIs make Mopidy a perfect base for your projects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;oracle-database&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/oracle_database/&#34;&gt;Oracle Database&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to build an oracle database docker while feeling dirty inside.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;peek&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/peek/&#34;&gt;Peek&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Peek the screen recorder.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/phw/peek&#34;&gt;Peek&lt;/a&gt; is a simple animated GIF screen recorder with an easy to use interface.&lt;/p&gt; &lt;p&gt;If you try to use it with i3, you&#39;re going to have a bad time, you&#39;d &lt;a href=&#34;https://github.com/phw/peek#on-i3-the-recording-area-is-all-black-how-can-i-record-anything&#34;&gt;need to install&lt;/a&gt; &lt;a href=&#34;https://github.com/chjj/compton&#34;&gt;Compton&lt;/a&gt;, and then the elements &lt;a href=&#34;https://github.com/phw/peek#why-cant-i-interact-with-the-ui-elements-inside-the-recording-area&#34;&gt;may not even be clickable&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add note that it works with kitty.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;syncthing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/&#34;&gt;Syncthing&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Mention privacy configurations.&lt;/p&gt; &lt;p&gt;Disable the &lt;a href=&#34;https://docs.syncthing.net/users/security.html#global-discovery&#34;&gt;Global Discovery&lt;/a&gt; and &lt;a href=&#34;https://docs.syncthing.net/users/security.html#relay-connections&#34;&gt;Relaying connections&lt;/a&gt; options.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/#syncthing-over-tor&#34;&gt;Investigate if Syncthing can be used over Tor.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I haven&#39;t found a reliable and safe way to do it, but I&#39;ve set a path to follow if you&#39;re interested.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Configure Vim to set the upstream by default when git pushing.&lt;/li&gt; &lt;li&gt;New: Add vim landing page.&lt;/li&gt; &lt;li&gt;Reorganization: Refactor the vim_automation article into vim and vim_plugins.&lt;/li&gt; &lt;li&gt;Correction: Correct vim snippet to remember the folds when saving a file.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;cone&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cone/&#34;&gt;cone&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the mobile double entry accounting application.&lt;/li&gt; &lt;li&gt;Correction: Correct the description of the transaction to be beancount compatible.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gadgetbridge&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;GadgetBridge&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add more guidelines to reverse engineer the band protocol.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;osmand&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/osmand/&#34;&gt;OsmAnd&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce OsmAnd.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://osmand.net&#34;&gt;OsmAnd&lt;/a&gt; is a mobile application for global map viewing and navigating based on &lt;a href=&#34;https://osm.org&#34;&gt;OpenStreetMaps&lt;/a&gt;. Perfect if you&#39;re looking for a privacy focused, community maintained open source alternative to google maps.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;signal&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/signal/&#34;&gt;Signal&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the messaging app and how to decrypt the backups.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Try vim-pencil without success, but love mdnav.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chmp/mdnav&#34;&gt;mdnav&lt;/a&gt; opens links to urls or files when pressing &lt;code&gt;enter&lt;/code&gt; in normal mode over a markdown link, similar to &lt;code&gt;gx&lt;/code&gt; but more powerful. I specially like the ability of following &lt;code&gt;[self referencing link][]&lt;/code&gt; links, that allows storing the links at the bottom.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/#im-good-or-im-well&#34;&gt;Explain when to use I&#39;m good or I&#39;m well.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use I&#39;m well when referring to being ill, use I&#39;m good for the rest.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;grammar-and-orthography&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/build_your_own_wiki/&#34;&gt;Grammar and Orthography&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to enable clickable navigation sections in your mkdocs repository.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oprypin&#34;&gt;oprypin&lt;/a&gt; has solved it with the &lt;a href=&#34;https://github.com/oprypin/mkdocs-section-index&#34;&gt;mkdocs-section-index&lt;/a&gt; plugin.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Expand the introduction and add Dave&#39;s suggested link.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#where-to-add-your-pronouns&#34;&gt;Explain where to add your pronouns.&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Hi, I’m Lyz (he/him), I&#39;m writing to tell you…&lt;/p&gt; &lt;/blockquote&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#when-to-capitalize-after-a-question-mark&#34;&gt;Explain when to capitalize after a question mark.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If the sentence ends after the question mark you should capitalize, if it doesn&#39;t end, you shouldn&#39;t have used the question mark, since it ends a sentence.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add textstat tests.&lt;/p&gt; &lt;p&gt;To analyze the text readability&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#how-to-use-the-singular-they&#34;&gt;Explain how to use the singular &lt;code&gt;they&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain when to write won&#39;t or wont.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Won&#39;t is the correct way to contract will not.&lt;/li&gt; &lt;li&gt;Wont is a synonym of &#34;a habit&#34;. For example, &#34;He went for a morning jog, as was his wont&#34;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#use-collocations&#34;&gt;Explain what collocations are and how to avoid the word very.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Collocation refers to a natural combination of words that are closely affiliated with each other. They make it easier to avoid overused or ambiguous words like &#34;very&#34;, &#34;nice&#34;, or &#34;beautiful&#34;, by using a pair of words that fit the context better and that have a more precise meaning.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#stop-saying-i-know&#34;&gt;Explain what can you use instead of I know.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &#34;I know&#34; may not be the best way to show the other person that you&#39;ve got the information. You can take the chance to use other words that additionally gives more context on how you stand with the information you&#39;ve received, thus improving the communication and creating a bond.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#use-of-z-or-s-in-some-words&#34;&gt;Explain the use of z or s in some words.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It looks like American english uses &lt;code&gt;z&lt;/code&gt; while British uses &lt;code&gt;s&lt;/code&gt;, some examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://writingexplained.org/organisation-vs-organization-difference&#34;&gt;Organizations vs organisation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://english.stackexchange.com/questions/282621/authorization-vs-authorisation-im-in-some-real-dilemma&#34;&gt;Authorization vs authorisation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://grammarist.com/spelling/customise-customize/&#34;&gt;Customized vs customised&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Both forms are correct, so choose the one that suits your liking.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;forking-this-garden&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/&#34;&gt;Forking this garden&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#writing-style-books&#34;&gt;Analyze interesting books on writing style.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The elements of style by William Strunk Jr and E.B White&lt;/li&gt; &lt;li&gt;On writing well by William Zinsser&lt;/li&gt; &lt;li&gt;Bird by bird by Anne Lamott&lt;/li&gt; &lt;li&gt;On writing by Stephen King&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#how-to-end-a-letter&#34;&gt;Explain how to end a letter.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use Sincerely in doubt and Best if you have more confidence. Add a comma after the sign-off and &lt;em&gt;never&lt;/em&gt; use Cheers (it&#39;s what I&#39;ve been doing all my life &lt;code&gt;(◞‸◟；)&lt;/code&gt; ).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to fork the blue book.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;digital-gardens&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;Digital Gardens&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the digital garden concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://joelhooks.com/digital-garden&#34;&gt;Digital Garden&lt;/a&gt; is a method of storing and maintaining knowledge in an maintainable, scalable and searchable way. They are also known as second brains.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;cooking&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking/&#34;&gt;Cooking&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the cooking art.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cooking-basics&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/&#34;&gt;Cooking Basics&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/#boiling-an-egg&#34;&gt;Refactor the perfect technique to boil an egg.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/#boil-chickpeas-when-you&#39;ve-forgotten-to-soak-them&#34;&gt;Explain how to boil chickpeas when you&#39;ve forgotten to soak them.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add a level teaspoon of baking soda to the pot and cook them as usual&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;pilates&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/&#34;&gt;Pilates&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the art.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pilates&#34;&gt;Pilates&lt;/a&gt; is a physical fitness system based on controlled movements putting emphasis on alignment, breathing, developing a strong core, and improving coordination and balance. The core (or powerhouse), consisting of the muscles of the abdomen, low back, and hips, is thought to be the key to a person&#39;s stability.&lt;/p&gt; &lt;p&gt;Pilates&#39; system allows for different exercises to be modified in range of difficulty from beginner to advanced or to any other level, and also in terms of the instructor and practitioner&#39;s specific goals and/or limitations. Intensity can be increased over time as the body adapts itself to the exercises.&lt;/p&gt; &lt;p&gt;You can think of yoga, but without the spiritual aspects.&lt;/p&gt; &lt;p&gt;Also added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s principles&lt;/li&gt; &lt;li&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/#swing-from-table&#34;&gt;swing from table&lt;/a&gt; exercise.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;board-gaming&#34;&gt;Board Gaming&lt;/h3&gt; &lt;h4 id=&#34;regicide&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/regicide/&#34;&gt;Regicide&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the awesome Regicide card game.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.badgersfrommars.com/&#34;&gt;Regicide&lt;/a&gt; is a wonderful cooperative card game for 1 to 4 players. It&#39;s awesome how they&#39;ve built such a rich game dynamic with a normal deck of cards. Even if you can play it with any deck, I suggest to buy &lt;a href=&#34;https://www.badgersfrommars.com/buy-regicide&#34;&gt;the deck they sell&lt;/a&gt; because their cards are magnificent and they deserve the money for their impressive game. Another thing I love about them is that even if you can&#39;t or don&#39;t want to pay for the game, they give the &lt;a href=&#34;https://www.badgersfrommars.com/assets/RegicideRulesA4.pdf?v=2&#34;&gt;rules for free&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t like reading the rules directly from their pdf (although it&#39;s quite short), they explain them in &lt;a href=&#34;https://www.badgersfrommars.com/regicide&#34;&gt;this video&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;I&#39;ve loved the game so much, that I&#39;ve created some variations of the rules to make each game more different and changeling.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;drawing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/&#34;&gt;Drawing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/#ellipses&#34;&gt;How to draw Ellipses.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Ellipses are the next basic shape we&#39;re going to study (after the lines). They are extremely important and notoriously annoying to draw. Important because we&#39;re going to be using ellipses in 2D space to represent circles that exist in 3D space.&lt;/p&gt; &lt;p&gt;In this section we:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Introduce the basic concepts surrounding the ellipses&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/#drawing-ellipses&#34;&gt;How to draw them&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;exercise-pool&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/exercise_pool/&#34;&gt;Exercise Pool&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/exercise_pool/#ellipses&#34;&gt;Add the Tables of ellipses drawing exercise.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This exercise is meant to get you used to drawing ellipses, in a variety of sizes, orientations and degrees. It also sets out a clear space each ellipse is meant to occupy, giving us a means to assess whether or not an ellipse was successful, or if there were visible mistakes (where it went outside of its allotted space, or ended up falling short). Practicing against set criteria, with a way to judge success/failure is an important element of learning. There&#39;s nothing wrong with failure - it&#39;s an opportunity to learn. Having a clearly defined task allows us to analyze those failures and make the most of them.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;origami&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/origami/&#34;&gt;Origami&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add mark1626 digital garden article on origamis.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;contact&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/contact/&#34;&gt;Contact&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the XMPP address.&lt;/p&gt; &lt;p&gt;Riseup has stopped giving support for XMPP :(&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add remote work tips.&lt;/li&gt; &lt;li&gt;New: Introduce lazy loading implementation paradigm with python.&lt;/li&gt; &lt;li&gt;New: Explain how to lazy load pydantic objects.&lt;/li&gt; &lt;li&gt;New: Explain my accounting automation workflow.&lt;/li&gt; &lt;li&gt;New: Feature mkdocs-rss-plugin as a solution of publishing mkdocs updates as an RSS.&lt;/li&gt; &lt;li&gt;New: Add a git issue tracker and markdown formatter.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate mkdocs issues.&lt;/p&gt; &lt;p&gt;They&#39;ve been fixed in the last release&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest organize to act on computer file changes.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://organize.readthedocs.io/en/latest/&#34;&gt;organize&lt;/a&gt; looks good for automating processes on files. Maybe it&#39;s interesting to run it with &lt;a href=&#34;https://askubuntu.com/a/819290&#34;&gt;inotifywait&lt;/a&gt; instead of with a &lt;a href=&#34;https://github.com/tfeldmann/organize/issues/18&#34;&gt;cron job&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Outrun.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Overv/outrun&#34;&gt;Outrun&lt;/a&gt; lets you execute a local command using the processing power of another Linux machine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Broken links.&lt;/p&gt; &lt;p&gt;Removed the link to (everything_i_know.md) since it no longer exists. Updated some links that where broken due to a folder structure change.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to select a random choice from &lt;code&gt;Enum&lt;/code&gt; objects.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;pydantic&lt;/a&gt; uses &lt;code&gt;Enum&lt;/code&gt; objects to define &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/types/#enums-and-choices&#34;&gt;the choices of fields&lt;/a&gt;, so we need them to create the factories of those objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Improve the periodic tasks and application metrics monitoring.&lt;/p&gt; &lt;p&gt;Setup an &lt;a href=&#34;https://healthchecks.io/&#34;&gt;healthchecks&lt;/a&gt; instance with the &lt;a href=&#34;https://docs.linuxserver.io/images/docker-healthchecks&#34;&gt;linuxserver image&lt;/a&gt; to monitor cronjobs.&lt;/p&gt; &lt;p&gt;For the notifications either use the &lt;a href=&#34;https://healthchecks.io/docs/configuring_prometheus/&#34;&gt;prometheus metrics&lt;/a&gt; or an &lt;a href=&#34;https://github.com/healthchecks/healthchecks/issues/271&#34;&gt;apprise&lt;/a&gt; compatible system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to check if an rsync command has gone well.&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;diff -r --brief source/ dest/&lt;/code&gt;, and check that there is no output.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Reorder the sections of the site navigation menu.&lt;/p&gt; &lt;p&gt;Give more importance to Coding, Activism and Life Management, reducing the Software Architecture and Data Analysis sections.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the tool management section.&lt;/p&gt; &lt;p&gt;Most of the tasks or processes we do involve some kind of tool, the better you know how to use them, the better your efficiency will be. The more you use a tool, the more it&#39;s worth the investment of time to improve your usage of it.&lt;/p&gt; &lt;p&gt;Whenever I use a tool, I try to think if I could configure it or use it in a way that will make it easier or quicker. Don&#39;t go crazy and try to change everything. Go step by step, and once you&#39;ve internalized the improvement, implement the next.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Move the tasks tools from the task management article to their own.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;div class=&#34;md-source-file&#34;&gt; &lt;small&gt; Last update: &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2022-08-31T08:37:51+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2022-08-31&lt;/span&gt; &lt;/small&gt; &lt;/div&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021/</link>
      <pubDate>2022-08-31 08:37:51+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021/</guid>
      
    </item>
    
    <item><title>2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;meta&#34;&gt;Meta&lt;/h2&gt; &lt;h3 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Update information on active projects.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helm/helm/&#34;&gt;Helm&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce helm-git to install charts directly from git repositories.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Tell how to make long diffs usable.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;kubernetes&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain jobs, cronjobs and how to monitor them with prometheus.&lt;/li&gt; &lt;li&gt;New: Explain how to debug cronjob logs.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kubectl&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/&#34;&gt;Kubectl&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add kubectl command cheatsheet.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/ci/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Split CI documents into their own pages.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;black&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;Black&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reveal the type of an expression.&lt;/li&gt; &lt;li&gt;Improvement: Add git link.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Configure black to process long lines.&lt;/p&gt; &lt;p&gt;Use the &lt;code&gt;--experimental-string-procesing&lt;/code&gt; flag to process long lines.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the alex linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/alex/&#34;&gt;Alex&lt;/a&gt; helps you find gender favoring, polarizing, race related, religion inconsiderate, or other unequal phrasing in text.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to skip one line.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to fix the Module X has no attribute Y.&lt;/li&gt; &lt;li&gt;New: Explain how to prevent the formatter on some lines.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yamlfix&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/&#34;&gt;Yamlfix&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce flakeheaven python linter.&lt;/p&gt; &lt;p&gt;Flakehell is a &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flake8/&#34;&gt;Flake8&lt;/a&gt; wrapper to make it cool.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Annotate the slowness of the bandit tests in pre-commit.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Add yamlfix formatter.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;markdownlint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;Markdownlint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the markdownlint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;markdownlint&lt;/a&gt; is A linter for Markdown files.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;proselint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/proselint/&#34;&gt;Proselint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce proselint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amperser/proselint/&#34;&gt;Proselint&lt;/a&gt; is another linter for prose.&lt;/p&gt; &lt;p&gt;feat(write-good) introduce the write-good linter&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/btford/write-good&#34;&gt;write-good&lt;/a&gt; is a naive linter for English prose.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter template testing guidelines.&lt;/li&gt; &lt;li&gt;New: Explain how to remove unwanted directories.&lt;/li&gt; &lt;li&gt;New: Explain how to use a default configuration for all your templates.&lt;/li&gt; &lt;li&gt;Improvement: Add references on why is not easy to update cookiecutter templates.&lt;/li&gt; &lt;li&gt;New: Explain how to debug failing cookiecutter tests.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce cruft tool to manage cookiecutter templates.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://cruft.github.io/cruft/&#34;&gt;cruft&lt;/a&gt; allows you to maintain all the necessary boilerplate for packaging and building projects separate from the code you intentionally write. Fully compatible with existing &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;Cookiecutter&lt;/a&gt; templates.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to find a metric name.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add statistical analysis on instance sizes using prometheus metrics.&lt;/p&gt; &lt;p&gt;Explain how to configure prometheus to automatically check if your instances are of the correct size and which are your bottlenecks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to install with docker.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Reorganization: Move the installation of docker to prometheus install.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;node-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/node_exporter/&#34;&gt;Node Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Filter out stopped instances.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter documentation.&lt;/li&gt; &lt;li&gt;New: Add docker construction for a python project.&lt;/li&gt; &lt;li&gt;New: Add commit guidelines with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Type hints of subclasses of abstract classes.&lt;/li&gt; &lt;li&gt;New: Introduce the python docstrings.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add python snippets article.&lt;/p&gt; &lt;p&gt;Includes the generation of OpenSSH keys with the cryptography library&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Correct typo in the generation of ssh keys.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Add email to the generated ssh snippet.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to make multiline code look clean.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;textwrap.dedent()&lt;/code&gt; to define variables that require multiline strings&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to play a file inside python.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to save a python object to a string using ruamel parser.&lt;/li&gt; &lt;li&gt;New: Explain how to do a deep copy of a dictionary.&lt;/li&gt; &lt;li&gt;New: Explain how to solve the R0201 pylint error.&lt;/li&gt; &lt;li&gt;New: Do an initial analysis on Python profiling.&lt;/li&gt; &lt;li&gt;New: Introduce some ideas on optimization of python code.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;alembic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/alembic/&#34;&gt;Alembic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to use alembic from a python scripts and not.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to setup and test a click application.&lt;/li&gt; &lt;li&gt;New: Introduce click arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to accept options from environmental variables and how to handle contexts.&lt;/li&gt; &lt;li&gt;Correction: Add note on capturing stderr and stdout with caplog instead of click methods.&lt;/li&gt; &lt;li&gt;New: Introduce the boolean options and variadic arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to use a default command to a click group.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Improve arguments documentation.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add example on how to use variadic arguments.&lt;/li&gt; &lt;li&gt;Explain how to use File and Path click arguments&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to set the allowable values for an argument.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to hide a command from the --help output.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/dash/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dash and dash-leaflet.&lt;/p&gt; &lt;p&gt;Explain how to initiate dash and how to create a map with dash-leaflet&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to interact with programs that ask for user input.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;type-hints&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Type Hints&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Improve the definition of objects with multiple types with TypeVar.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use the TypedDict instead of Dict.&lt;/p&gt; &lt;p&gt;Useful if the different keys have different types&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the deepdiff library.&lt;/li&gt; &lt;li&gt;New: Explain how to fix the Pylint R0201 error.&lt;/li&gt; &lt;li&gt;New: Explain why we can safely ignore W1203.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;factoryboy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Add warning that generating your own attributes doesn&#39;t work anymore.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to populate the faker fixture with random seeds.&lt;/li&gt; &lt;li&gt;Correction: Improve the way of generating random seed.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;folium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/folium/&#34;&gt;Folium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use folium, change tileset and load data.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Change the order of the layers.&lt;/p&gt; &lt;p&gt;Openstreetmaps is more clear than the IGN, so the waypoints are better seen&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain what fixtures are.&lt;/li&gt; &lt;li&gt;New: Tell how to use a fixture more than once in a function.&lt;/li&gt; &lt;li&gt;New: Document the capsys, caplog and tmpdir builtin fixtures.&lt;/li&gt; &lt;li&gt;New: Add freezegun fixture.&lt;/li&gt; &lt;li&gt;New: Explain how to save the fixtures into a separate file.&lt;/li&gt; &lt;li&gt;New: Explain the different parametrization options. Introduce the awesome pytest-cases.&lt;/li&gt; &lt;li&gt;New: Explain how to use marks to group the tests.&lt;/li&gt; &lt;li&gt;New: Explain how to test error raising with pytest.&lt;/li&gt; &lt;li&gt;Improvement: Solve W0621 Redefining name %r from outer scope (line %s) error.&lt;/li&gt; &lt;li&gt;New: Explain how to change the log level with the caplog.&lt;/li&gt; &lt;li&gt;Correction: Add link to the unpack_fixture section.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to better use with pytest.raises snippets.&lt;/p&gt; &lt;p&gt;To capture the message in a cleaner way&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/mkdocstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the mkdocstrings library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pawamoy.github.io/mkdocstrings&#34;&gt;mkdocstrings&lt;/a&gt; is a library to automatically generate &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt; pages from the code docstrings.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;passpy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/passpy/&#34;&gt;Passpy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the passpy library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bfrascher/passpy&#34;&gt;passpy&lt;/a&gt; a platform independent library and cli that is compatible with &lt;a href=&#34;http://www.passwordstore.org/&#34;&gt;ZX2C4&#39;s pass&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pydantic with it&#39;s models and types.&lt;/li&gt; &lt;li&gt;New: Explain how validators work.&lt;/li&gt; &lt;li&gt;New: Explain how to export the models.&lt;/li&gt; &lt;li&gt;New: Explain how to validate functions and use the mypy plugin.&lt;/li&gt; &lt;li&gt;New: Explain how to initialize empty iterables on attributes.&lt;/li&gt; &lt;li&gt;New: Explain how to solve the E0611 error.&lt;/li&gt; &lt;li&gt;Correction: Explain how to solve the E0611 error in code lines.&lt;/li&gt; &lt;li&gt;Correction: Correct pylint R0201 on pydantic models.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pypika.&lt;/li&gt; &lt;li&gt;New: Explain how to select, filter and delete data.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sqlite python library.&lt;/li&gt; &lt;li&gt;New: Explain how to get the columns of a sqlite3 query.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;talkey&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/talkey/&#34;&gt;Talkey&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce text to speech python library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yoyo&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/yoyo/&#34;&gt;Yoyo&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce yoyo database migration tool.&lt;/li&gt; &lt;li&gt;New: Explain how to do yoyo table relationships.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;json&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/json/json/&#34;&gt;JSON&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add json linters and fixers.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;SQL&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sql data types.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce sqlite and it&#39;s upsert feature.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to inject fake dependencies into e2e tests with click.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;repository-pattern&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/repository_pattern/&#34;&gt;Repository Pattern&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Warn about the definition of attributes created by the ORMs.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;strategy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/strategy/&#34;&gt;Strategy&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce strategy document.&lt;/p&gt; &lt;p&gt;Differentiate between strategic planning and strategic thinking&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain the benefits of sleep, the consequences of lack of sleep and the physiological effects of sleep including the circadian rhythm and what is melatonin.&lt;/li&gt; &lt;li&gt;New: Explain sleep pressure, caffeine and the relationship with the circadian rhythm.&lt;/li&gt; &lt;li&gt;New: Explain the independence between circadian and sleep pressure.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce haproxy and how to do a reverse proxy with it.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Correct meditation navigation element.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;monica&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/monica/&#34;&gt;monica&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add monica installation.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add ale language server processor Vim plugin.&lt;/li&gt; &lt;li&gt;New: Add only part of files to the index to stage.&lt;/li&gt; &lt;li&gt;New: Create ALEToggleFixer command to enable/disable fixers.&lt;/li&gt; &lt;li&gt;New: Make fugitive commit workflow more user friendly.&lt;/li&gt; &lt;li&gt;Correction: Add movement mappings for the commit message window.&lt;/li&gt; &lt;li&gt;New: Explain how to use YouCompleteMe to complete prose.&lt;/li&gt; &lt;li&gt;Correction: Explain how to limit the autosuggestion results to one when writing prose.&lt;/li&gt; &lt;li&gt;New: Explain how to search synonyms inside vim.&lt;/li&gt; &lt;li&gt;Correction: Improve the environment to write commits with more bindings and restoring bindings once you close the message.&lt;/li&gt; &lt;li&gt;New: Explain how to manage python foldings.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;zfs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/&#34;&gt;ZFS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce zfs and some basic commands.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add there is/are avoidance pattern.&lt;/li&gt; &lt;li&gt;New: Explain the guidelines and tools I use for writing.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;meditation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/meditation/&#34;&gt;Meditation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Define meditation and it&#39;s types.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;video-gaming&#34;&gt;Video Gaming&lt;/h3&gt; &lt;h4 id=&#34;the-battle-for-wesnoth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/wesnoth/&#34;&gt;The Battle for Wesnoth&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to play the loyalist civilization.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add sh awesome library.&lt;/li&gt; &lt;li&gt;Correction: Fix broken links.&lt;/li&gt; &lt;li&gt;New: Add factoryboy factory usage.&lt;/li&gt; &lt;li&gt;New: Add the xy problem.&lt;/li&gt; &lt;li&gt;New: Add tinydb documentation.&lt;/li&gt; &lt;li&gt;New: Add prevent cookiecutter from processing some files docs.&lt;/li&gt; &lt;li&gt;New: Add first cutting shapes steps.&lt;/li&gt; &lt;li&gt;Correction: Improve the changelog generation with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Remove unwanted gifs on rave dances.&lt;/li&gt; &lt;li&gt;New: Add kicking-running man and tap spin.&lt;/li&gt; &lt;li&gt;New: Prevent additional whitespaces when jinja condition is not met.&lt;/li&gt; &lt;li&gt;Correction: Correct the running man.&lt;/li&gt; &lt;li&gt;New: Add how to keep historical data on database table changes.&lt;/li&gt; &lt;li&gt;New: List all process swap space usage.&lt;/li&gt; &lt;li&gt;New: Introduce the click python library.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add more steps.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Quick tempo running man&lt;/li&gt; &lt;li&gt;Quick tempo T-Step&lt;/li&gt; &lt;li&gt;Francis T-Step&lt;/li&gt; &lt;li&gt;Sacco kicks&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add Francis spin and first version of dance routine.&lt;/p&gt; &lt;p&gt;Corrected how to reach the quick tempo running man.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: More guidelines on how to speed up the running man.&lt;/p&gt; &lt;p&gt;And refactor in different files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add times for next steps to learn.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Added ash, birch and beech description.&lt;/li&gt; &lt;li&gt;New: Introduce wireguard.&lt;/li&gt; &lt;li&gt;New: Explain how to debug elasticsearch yellow state.&lt;/li&gt; &lt;li&gt;Correction: Update python ci docs.&lt;/li&gt; &lt;li&gt;New: Explain how to solve cyclic imports when using type hints.&lt;/li&gt; &lt;li&gt;New: Evaluate the different solutions to programmatically interact with databases.&lt;/li&gt; &lt;li&gt;Correction: Remove xkcd image.&lt;/li&gt; &lt;li&gt;Reorganization: Extract type hints to it&#39;s own file.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Bump material version to 6.0.2.&lt;/p&gt; &lt;p&gt;Also take the chance to move images directory to img&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct repository pattern images path.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Correct image paths.&lt;/li&gt; &lt;li&gt;Correction: Add note on the flexibility of query builders.&lt;/li&gt; &lt;li&gt;Correction: Remove type hints from python code styling.&lt;/li&gt; &lt;li&gt;New: Explain the use of Generic typing.&lt;/li&gt; &lt;li&gt;Correction: Correct domain driven design image path.&lt;/li&gt; &lt;li&gt;Correction: Remove broken links.&lt;/li&gt; &lt;li&gt;New: Explain how to make your python packages mypy compliant.&lt;/li&gt; &lt;li&gt;Correction: Explain how to remove all pip packages from a virtualenv.&lt;/li&gt; &lt;li&gt;Correction: Discourage the use of pip-tools in the CI.&lt;/li&gt; &lt;li&gt;Correction: Explain how to get started.&lt;/li&gt; &lt;li&gt;Correction: References between articles.&lt;/li&gt; &lt;li&gt;New: Explain how to fix W0707 mypy error.&lt;/li&gt; &lt;li&gt;New: Introduce wesnoth, and the northerners and rebels civilizations.&lt;/li&gt; &lt;li&gt;New: Explain how to use Wake on Lan.&lt;/li&gt; &lt;li&gt;New: Explain how to use TypeVar to specify children class.&lt;/li&gt; &lt;li&gt;New: Explain how to solve W0106 in list comprehensions.&lt;/li&gt; &lt;li&gt;New: Explain how to solve SIM105.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020/</link>
      <pubDate>2022-04-29 20:15:10+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020/</guid>
      
    </item>
    
  </channel>
</rss>